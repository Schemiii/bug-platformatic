{
  "openapi": "3.0.3",
  "info": {
    "title": "Platformatic Composer",
    "version": "1.0.0"
  },
  "components": {
    "schemas": {}
  },
  "paths": {
    "/file/": {
      "get": {
        "operationId": "import_db_getFile",
        "summary": "Get file.",
        "tags": [
          "file"
        ],
        "description": "Fetch file from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "documentType",
                  "encoding",
                  "hash",
                  "id",
                  "mimetype",
                  "name",
                  "path",
                  "type"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.documentType.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.documentType.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.documentType.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.documentType.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.documentType.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.documentType.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.documentType.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.documentType.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.documentType.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.documentType.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.documentType.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.documentType.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.encoding.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.encoding.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.encoding.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.encoding.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.encoding.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.encoding.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.encoding.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.encoding.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.encoding.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.encoding.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.encoding.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.encoding.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.hash.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.hash.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.hash.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.hash.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.hash.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.hash.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.hash.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.hash.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.hash.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.hash.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.hash.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.hash.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mimetype.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mimetype.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mimetype.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mimetype.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mimetype.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mimetype.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mimetype.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mimetype.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mimetype.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mimetype.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mimetype.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mimetype.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.type.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.type.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.type.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.type.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.type.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.type.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.type.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.type.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.type.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.type.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.type.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.type.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.documentType",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.encoding",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.hash",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.id",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.mimetype",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.name",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.path",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.type",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "File",
                    "description": "A File",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "documentType": {
                        "type": "string",
                        "nullable": true
                      },
                      "name": {
                        "type": "string",
                        "nullable": true
                      },
                      "encoding": {
                        "type": "string",
                        "nullable": true
                      },
                      "mimetype": {
                        "type": "string",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "nullable": true
                      },
                      "path": {
                        "type": "string",
                        "nullable": true
                      },
                      "hash": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "import_db_createFile",
        "summary": "Create file.",
        "tags": [
          "file"
        ],
        "description": "Add new file to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FileInput",
                "description": "A File",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "documentType": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "encoding": {
                    "type": "string"
                  },
                  "mimetype": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "path": {
                    "type": "string"
                  },
                  "hash": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "documentType",
                  "encoding",
                  "hash",
                  "mimetype",
                  "name",
                  "path",
                  "type"
                ]
              }
            }
          },
          "required": true,
          "description": "A File"
        },
        "responses": {
          "200": {
            "description": "A File",
            "content": {
              "application/json": {
                "schema": {
                  "title": "File",
                  "description": "A File",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "documentType": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "encoding": {
                      "type": "string",
                      "nullable": true
                    },
                    "mimetype": {
                      "type": "string",
                      "nullable": true
                    },
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "path": {
                      "type": "string",
                      "nullable": true
                    },
                    "hash": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "import_db_updateFile",
        "summary": "Update file.",
        "tags": [
          "file"
        ],
        "description": "Update one or more file in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FileInput",
                "description": "A File",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "documentType": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "encoding": {
                    "type": "string"
                  },
                  "mimetype": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "path": {
                    "type": "string"
                  },
                  "hash": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "documentType",
                  "encoding",
                  "hash",
                  "mimetype",
                  "name",
                  "path",
                  "type"
                ]
              }
            }
          },
          "required": true,
          "description": "A File"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "documentType",
                  "encoding",
                  "hash",
                  "id",
                  "mimetype",
                  "name",
                  "path",
                  "type"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.documentType.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.documentType.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.documentType.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.documentType.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.documentType.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.documentType.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.documentType.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.documentType.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.documentType.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.documentType.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.documentType.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.documentType.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.encoding.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.encoding.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.encoding.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.encoding.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.encoding.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.encoding.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.encoding.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.encoding.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.encoding.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.encoding.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.encoding.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.encoding.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.hash.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.hash.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.hash.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.hash.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.hash.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.hash.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.hash.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.hash.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.hash.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.hash.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.hash.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.hash.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mimetype.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mimetype.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mimetype.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mimetype.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mimetype.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mimetype.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mimetype.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mimetype.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mimetype.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mimetype.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mimetype.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mimetype.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.type.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.type.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.type.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.type.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.type.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.type.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.type.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.type.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.type.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.type.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.type.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.type.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "File",
                    "description": "A File",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "documentType": {
                        "type": "string",
                        "nullable": true
                      },
                      "name": {
                        "type": "string",
                        "nullable": true
                      },
                      "encoding": {
                        "type": "string",
                        "nullable": true
                      },
                      "mimetype": {
                        "type": "string",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "nullable": true
                      },
                      "path": {
                        "type": "string",
                        "nullable": true
                      },
                      "hash": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/file/{id}": {
      "get": {
        "operationId": "import_db_getFileById",
        "summary": "Get File by id.",
        "tags": [
          "file"
        ],
        "description": "Fetch File using its id from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "documentType",
                  "encoding",
                  "hash",
                  "id",
                  "mimetype",
                  "name",
                  "path",
                  "type"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A File",
            "content": {
              "application/json": {
                "schema": {
                  "title": "File",
                  "description": "A File",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "documentType": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "encoding": {
                      "type": "string",
                      "nullable": true
                    },
                    "mimetype": {
                      "type": "string",
                      "nullable": true
                    },
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "path": {
                      "type": "string",
                      "nullable": true
                    },
                    "hash": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "import_db_updateFile",
        "summary": "Update file.",
        "tags": [
          "file"
        ],
        "description": "Update file in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FileInput",
                "description": "A File",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "documentType": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "encoding": {
                    "type": "string"
                  },
                  "mimetype": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "path": {
                    "type": "string"
                  },
                  "hash": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "documentType",
                  "encoding",
                  "hash",
                  "mimetype",
                  "name",
                  "path",
                  "type"
                ]
              }
            }
          },
          "required": true,
          "description": "A File"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "documentType",
                  "encoding",
                  "hash",
                  "id",
                  "mimetype",
                  "name",
                  "path",
                  "type"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A File",
            "content": {
              "application/json": {
                "schema": {
                  "title": "File",
                  "description": "A File",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "documentType": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "encoding": {
                      "type": "string",
                      "nullable": true
                    },
                    "mimetype": {
                      "type": "string",
                      "nullable": true
                    },
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "path": {
                      "type": "string",
                      "nullable": true
                    },
                    "hash": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "import_db_deleteFile",
        "summary": "Delete file.",
        "tags": [
          "file"
        ],
        "description": "Delete one or more file from the Database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "documentType",
                  "encoding",
                  "hash",
                  "id",
                  "mimetype",
                  "name",
                  "path",
                  "type"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A File",
            "content": {
              "application/json": {
                "schema": {
                  "title": "File",
                  "description": "A File",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "documentType": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "encoding": {
                      "type": "string",
                      "nullable": true
                    },
                    "mimetype": {
                      "type": "string",
                      "nullable": true
                    },
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "path": {
                      "type": "string",
                      "nullable": true
                    },
                    "hash": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/file/{id}/fileExtraction": {
      "get": {
        "operationId": "import_db_getFileExtractionForFile",
        "summary": "Get fileExtraction for file.",
        "tags": [
          "file"
        ],
        "description": "Fetch all the fileExtraction for file from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "content",
                  "entities",
                  "fileId",
                  "id"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FileExtraction",
                    "description": "A FileExtraction",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fileId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "content": {
                        "type": "string",
                        "nullable": true
                      },
                      "entities": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/file/{id}/fileTraining": {
      "get": {
        "operationId": "import_db_getFileTrainingForFile",
        "summary": "Get fileTraining for file.",
        "tags": [
          "file"
        ],
        "description": "Fetch all the fileTraining for file from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileId",
                  "id",
                  "processorPath",
                  "status"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FileTraining",
                    "description": "A FileTraining",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fileId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "processorPath": {
                        "type": "string",
                        "nullable": true
                      },
                      "status": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fileExtraction/": {
      "get": {
        "operationId": "import_db_getFileExtraction",
        "summary": "Get fileExtraction.",
        "tags": [
          "file_extraction"
        ],
        "description": "Fetch fileExtraction from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "content",
                  "entities",
                  "fileId",
                  "id"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.content.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.content.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.content.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.content.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.content.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.content.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.content.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.content.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.content.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.content.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.content.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.content.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.entities.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.entities.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.entities.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.entities.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.entities.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.entities.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.entities.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.entities.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.entities.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.entities.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.entities.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.entities.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fileId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fileId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fileId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fileId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fileId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.content",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.entities",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.fileId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.id",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FileExtraction",
                    "description": "A FileExtraction",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fileId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "content": {
                        "type": "string",
                        "nullable": true
                      },
                      "entities": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "import_db_createFileExtraction",
        "summary": "Create fileExtraction.",
        "tags": [
          "file_extraction"
        ],
        "description": "Add new fileExtraction to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FileExtractionInput",
                "description": "A FileExtraction",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "fileId": {
                    "type": "integer"
                  },
                  "content": {
                    "type": "string"
                  },
                  "entities": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "content",
                  "entities",
                  "fileId"
                ]
              }
            }
          },
          "required": true,
          "description": "A FileExtraction"
        },
        "responses": {
          "200": {
            "description": "A FileExtraction",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FileExtraction",
                  "description": "A FileExtraction",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fileId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "content": {
                      "type": "string",
                      "nullable": true
                    },
                    "entities": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "import_db_updateFileExtraction",
        "summary": "Update fileExtraction.",
        "tags": [
          "file_extraction"
        ],
        "description": "Update one or more fileExtraction in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FileExtractionInput",
                "description": "A FileExtraction",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "fileId": {
                    "type": "integer"
                  },
                  "content": {
                    "type": "string"
                  },
                  "entities": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "content",
                  "entities",
                  "fileId"
                ]
              }
            }
          },
          "required": true,
          "description": "A FileExtraction"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "content",
                  "entities",
                  "fileId",
                  "id"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.content.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.content.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.content.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.content.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.content.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.content.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.content.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.content.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.content.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.content.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.content.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.content.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.entities.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.entities.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.entities.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.entities.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.entities.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.entities.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.entities.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.entities.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.entities.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.entities.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.entities.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.entities.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fileId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fileId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fileId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fileId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fileId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FileExtraction",
                    "description": "A FileExtraction",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fileId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "content": {
                        "type": "string",
                        "nullable": true
                      },
                      "entities": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fileExtraction/{id}": {
      "get": {
        "operationId": "import_db_getFileExtractionById",
        "summary": "Get FileExtraction by id.",
        "tags": [
          "file_extraction"
        ],
        "description": "Fetch FileExtraction using its id from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "content",
                  "entities",
                  "fileId",
                  "id"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FileExtraction",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FileExtraction",
                  "description": "A FileExtraction",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fileId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "content": {
                      "type": "string",
                      "nullable": true
                    },
                    "entities": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "import_db_updateFileExtraction",
        "summary": "Update fileExtraction.",
        "tags": [
          "file_extraction"
        ],
        "description": "Update fileExtraction in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FileExtractionInput",
                "description": "A FileExtraction",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "fileId": {
                    "type": "integer"
                  },
                  "content": {
                    "type": "string"
                  },
                  "entities": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "content",
                  "entities",
                  "fileId"
                ]
              }
            }
          },
          "required": true,
          "description": "A FileExtraction"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "content",
                  "entities",
                  "fileId",
                  "id"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FileExtraction",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FileExtraction",
                  "description": "A FileExtraction",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fileId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "content": {
                      "type": "string",
                      "nullable": true
                    },
                    "entities": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "import_db_deleteFileExtraction",
        "summary": "Delete fileExtraction.",
        "tags": [
          "file_extraction"
        ],
        "description": "Delete one or more fileExtraction from the Database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "content",
                  "entities",
                  "fileId",
                  "id"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FileExtraction",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FileExtraction",
                  "description": "A FileExtraction",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fileId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "content": {
                      "type": "string",
                      "nullable": true
                    },
                    "entities": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/fileExtraction/{id}/file": {
      "get": {
        "operationId": "import_db_getFileForFileExtraction",
        "summary": "Get file for fileExtraction.",
        "tags": [
          "file_extraction"
        ],
        "description": "Fetch the file for fileExtraction from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "documentType",
                  "encoding",
                  "hash",
                  "id",
                  "mimetype",
                  "name",
                  "path",
                  "type"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A File",
            "content": {
              "application/json": {
                "schema": {
                  "title": "File",
                  "description": "A File",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "documentType": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "encoding": {
                      "type": "string",
                      "nullable": true
                    },
                    "mimetype": {
                      "type": "string",
                      "nullable": true
                    },
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "path": {
                      "type": "string",
                      "nullable": true
                    },
                    "hash": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/fileTraining/": {
      "get": {
        "operationId": "import_db_getFileTraining",
        "summary": "Get fileTraining.",
        "tags": [
          "file_training"
        ],
        "description": "Fetch fileTraining from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileId",
                  "id",
                  "processorPath",
                  "status"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fileId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fileId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fileId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fileId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fileId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.processorPath.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.processorPath.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.processorPath.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.processorPath.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.processorPath.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.processorPath.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.processorPath.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.processorPath.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.processorPath.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.processorPath.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.processorPath.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.processorPath.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.fileId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.id",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.processorPath",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.status",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FileTraining",
                    "description": "A FileTraining",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fileId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "processorPath": {
                        "type": "string",
                        "nullable": true
                      },
                      "status": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "import_db_createFileTraining",
        "summary": "Create fileTraining.",
        "tags": [
          "file_training"
        ],
        "description": "Add new fileTraining to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FileTrainingInput",
                "description": "A FileTraining",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "fileId": {
                    "type": "integer"
                  },
                  "processorPath": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "fileId",
                  "processorPath",
                  "status"
                ]
              }
            }
          },
          "required": true,
          "description": "A FileTraining"
        },
        "responses": {
          "200": {
            "description": "A FileTraining",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FileTraining",
                  "description": "A FileTraining",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fileId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "processorPath": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "import_db_updateFileTraining",
        "summary": "Update fileTraining.",
        "tags": [
          "file_training"
        ],
        "description": "Update one or more fileTraining in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FileTrainingInput",
                "description": "A FileTraining",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "fileId": {
                    "type": "integer"
                  },
                  "processorPath": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "fileId",
                  "processorPath",
                  "status"
                ]
              }
            }
          },
          "required": true,
          "description": "A FileTraining"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileId",
                  "id",
                  "processorPath",
                  "status"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fileId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fileId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fileId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fileId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fileId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fileId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.processorPath.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.processorPath.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.processorPath.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.processorPath.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.processorPath.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.processorPath.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.processorPath.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.processorPath.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.processorPath.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.processorPath.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.processorPath.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.processorPath.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FileTraining",
                    "description": "A FileTraining",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fileId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "processorPath": {
                        "type": "string",
                        "nullable": true
                      },
                      "status": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fileTraining/{id}": {
      "get": {
        "operationId": "import_db_getFileTrainingById",
        "summary": "Get FileTraining by id.",
        "tags": [
          "file_training"
        ],
        "description": "Fetch FileTraining using its id from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileId",
                  "id",
                  "processorPath",
                  "status"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FileTraining",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FileTraining",
                  "description": "A FileTraining",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fileId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "processorPath": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "import_db_updateFileTraining",
        "summary": "Update fileTraining.",
        "tags": [
          "file_training"
        ],
        "description": "Update fileTraining in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FileTrainingInput",
                "description": "A FileTraining",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "fileId": {
                    "type": "integer"
                  },
                  "processorPath": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "fileId",
                  "processorPath",
                  "status"
                ]
              }
            }
          },
          "required": true,
          "description": "A FileTraining"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileId",
                  "id",
                  "processorPath",
                  "status"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FileTraining",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FileTraining",
                  "description": "A FileTraining",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fileId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "processorPath": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "import_db_deleteFileTraining",
        "summary": "Delete fileTraining.",
        "tags": [
          "file_training"
        ],
        "description": "Delete one or more fileTraining from the Database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileId",
                  "id",
                  "processorPath",
                  "status"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FileTraining",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FileTraining",
                  "description": "A FileTraining",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fileId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "processorPath": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/fileTraining/{id}/file": {
      "get": {
        "operationId": "import_db_getFileForFileTraining",
        "summary": "Get file for fileTraining.",
        "tags": [
          "file_training"
        ],
        "description": "Fetch the file for fileTraining from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "documentType",
                  "encoding",
                  "hash",
                  "id",
                  "mimetype",
                  "name",
                  "path",
                  "type"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A File",
            "content": {
              "application/json": {
                "schema": {
                  "title": "File",
                  "description": "A File",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "documentType": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "encoding": {
                      "type": "string",
                      "nullable": true
                    },
                    "mimetype": {
                      "type": "string",
                      "nullable": true
                    },
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "path": {
                      "type": "string",
                      "nullable": true
                    },
                    "hash": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/import/invoice/goods": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/import/train/{fileId}": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "fileId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/import/model/{fileId}": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "fileId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/productSupplier/": {
      "get": {
        "operationId": "fair_db_getProductSupplier",
        "summary": "Get productSupplier.",
        "tags": [
          "product_supplier"
        ],
        "description": "Fetch productSupplier from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "bic",
                  "city",
                  "description",
                  "email",
                  "homepage",
                  "iban",
                  "id",
                  "name",
                  "phone",
                  "postalCode",
                  "ratingPrice",
                  "ratingSupply",
                  "state",
                  "street",
                  "vat"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.email.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.email.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.email.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.email.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.email.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.email.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.email.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.email.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.email.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.email.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.email.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.email.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.postalCode.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.postalCode.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.postalCode.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.postalCode.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.postalCode.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.postalCode.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.postalCode.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.postalCode.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.postalCode.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.postalCode.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.postalCode.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.postalCode.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPrice.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPrice.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPrice.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPrice.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPrice.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSupply.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSupply.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSupply.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSupply.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSupply.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSupply.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSupply.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingSupply.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingSupply.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingSupply.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingSupply.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingSupply.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.vat.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.vat.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.vat.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.vat.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.vat.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.vat.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.vat.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.vat.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.vat.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.vat.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.vat.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.vat.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.bic",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.city",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.description",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.email",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.homepage",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.iban",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.id",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.name",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.phone",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.postalCode",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.ratingPrice",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.ratingSupply",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.state",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.street",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.vat",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "ProductSupplier",
                    "description": "A ProductSupplier",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "bic": {
                        "type": "string",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "nullable": true
                      },
                      "homepage": {
                        "type": "string",
                        "nullable": true
                      },
                      "iban": {
                        "type": "string",
                        "nullable": true
                      },
                      "name": {
                        "type": "string",
                        "nullable": true
                      },
                      "phone": {
                        "type": "string",
                        "nullable": true
                      },
                      "ratingPrice": {
                        "type": "integer",
                        "nullable": true
                      },
                      "ratingSupply": {
                        "type": "integer",
                        "nullable": true
                      },
                      "email": {
                        "type": "string",
                        "nullable": true
                      },
                      "vat": {
                        "type": "string",
                        "nullable": true
                      },
                      "city": {
                        "type": "string",
                        "nullable": true
                      },
                      "state": {
                        "type": "string",
                        "nullable": true
                      },
                      "street": {
                        "type": "string",
                        "nullable": true
                      },
                      "postalCode": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "fair_db_createProductSupplier",
        "summary": "Create productSupplier.",
        "tags": [
          "product_supplier"
        ],
        "description": "Add new productSupplier to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "ProductSupplierInput",
                "description": "A ProductSupplier",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "bic": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "homepage": {
                    "type": "string"
                  },
                  "iban": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "ratingPrice": {
                    "type": "integer"
                  },
                  "ratingSupply": {
                    "type": "integer"
                  },
                  "email": {
                    "type": "string",
                    "nullable": true
                  },
                  "vat": {
                    "type": "string",
                    "nullable": true
                  },
                  "city": {
                    "type": "string",
                    "nullable": true
                  },
                  "state": {
                    "type": "string",
                    "nullable": true
                  },
                  "street": {
                    "type": "string",
                    "nullable": true
                  },
                  "postalCode": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "additionalProperties": false,
                "required": [
                  "bic",
                  "description",
                  "homepage",
                  "iban",
                  "name",
                  "phone",
                  "ratingPrice",
                  "ratingSupply"
                ]
              }
            }
          },
          "required": true,
          "description": "A ProductSupplier"
        },
        "responses": {
          "200": {
            "description": "A ProductSupplier",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ProductSupplier",
                  "description": "A ProductSupplier",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "bic": {
                      "type": "string",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "homepage": {
                      "type": "string",
                      "nullable": true
                    },
                    "iban": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "phone": {
                      "type": "string",
                      "nullable": true
                    },
                    "ratingPrice": {
                      "type": "integer",
                      "nullable": true
                    },
                    "ratingSupply": {
                      "type": "integer",
                      "nullable": true
                    },
                    "email": {
                      "type": "string",
                      "nullable": true
                    },
                    "vat": {
                      "type": "string",
                      "nullable": true
                    },
                    "city": {
                      "type": "string",
                      "nullable": true
                    },
                    "state": {
                      "type": "string",
                      "nullable": true
                    },
                    "street": {
                      "type": "string",
                      "nullable": true
                    },
                    "postalCode": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "fair_db_updateProductSupplier",
        "summary": "Update productSupplier.",
        "tags": [
          "product_supplier"
        ],
        "description": "Update one or more productSupplier in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "ProductSupplierInput",
                "description": "A ProductSupplier",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "bic": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "homepage": {
                    "type": "string"
                  },
                  "iban": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "ratingPrice": {
                    "type": "integer"
                  },
                  "ratingSupply": {
                    "type": "integer"
                  },
                  "email": {
                    "type": "string",
                    "nullable": true
                  },
                  "vat": {
                    "type": "string",
                    "nullable": true
                  },
                  "city": {
                    "type": "string",
                    "nullable": true
                  },
                  "state": {
                    "type": "string",
                    "nullable": true
                  },
                  "street": {
                    "type": "string",
                    "nullable": true
                  },
                  "postalCode": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "additionalProperties": false,
                "required": [
                  "bic",
                  "description",
                  "homepage",
                  "iban",
                  "name",
                  "phone",
                  "ratingPrice",
                  "ratingSupply"
                ]
              }
            }
          },
          "required": true,
          "description": "A ProductSupplier"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "bic",
                  "city",
                  "description",
                  "email",
                  "homepage",
                  "iban",
                  "id",
                  "name",
                  "phone",
                  "postalCode",
                  "ratingPrice",
                  "ratingSupply",
                  "state",
                  "street",
                  "vat"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.email.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.email.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.email.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.email.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.email.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.email.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.email.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.email.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.email.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.email.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.email.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.email.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.postalCode.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.postalCode.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.postalCode.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.postalCode.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.postalCode.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.postalCode.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.postalCode.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.postalCode.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.postalCode.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.postalCode.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.postalCode.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.postalCode.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPrice.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPrice.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPrice.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPrice.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPrice.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSupply.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSupply.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSupply.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSupply.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSupply.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSupply.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSupply.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingSupply.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingSupply.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingSupply.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingSupply.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingSupply.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.vat.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.vat.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.vat.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.vat.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.vat.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.vat.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.vat.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.vat.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.vat.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.vat.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.vat.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.vat.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "ProductSupplier",
                    "description": "A ProductSupplier",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "bic": {
                        "type": "string",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "nullable": true
                      },
                      "homepage": {
                        "type": "string",
                        "nullable": true
                      },
                      "iban": {
                        "type": "string",
                        "nullable": true
                      },
                      "name": {
                        "type": "string",
                        "nullable": true
                      },
                      "phone": {
                        "type": "string",
                        "nullable": true
                      },
                      "ratingPrice": {
                        "type": "integer",
                        "nullable": true
                      },
                      "ratingSupply": {
                        "type": "integer",
                        "nullable": true
                      },
                      "email": {
                        "type": "string",
                        "nullable": true
                      },
                      "vat": {
                        "type": "string",
                        "nullable": true
                      },
                      "city": {
                        "type": "string",
                        "nullable": true
                      },
                      "state": {
                        "type": "string",
                        "nullable": true
                      },
                      "street": {
                        "type": "string",
                        "nullable": true
                      },
                      "postalCode": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/productSupplier/{id}": {
      "get": {
        "operationId": "fair_db_getProductSupplierById",
        "summary": "Get ProductSupplier by id.",
        "tags": [
          "product_supplier"
        ],
        "description": "Fetch ProductSupplier using its id from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "bic",
                  "city",
                  "description",
                  "email",
                  "homepage",
                  "iban",
                  "id",
                  "name",
                  "phone",
                  "postalCode",
                  "ratingPrice",
                  "ratingSupply",
                  "state",
                  "street",
                  "vat"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A ProductSupplier",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ProductSupplier",
                  "description": "A ProductSupplier",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "bic": {
                      "type": "string",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "homepage": {
                      "type": "string",
                      "nullable": true
                    },
                    "iban": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "phone": {
                      "type": "string",
                      "nullable": true
                    },
                    "ratingPrice": {
                      "type": "integer",
                      "nullable": true
                    },
                    "ratingSupply": {
                      "type": "integer",
                      "nullable": true
                    },
                    "email": {
                      "type": "string",
                      "nullable": true
                    },
                    "vat": {
                      "type": "string",
                      "nullable": true
                    },
                    "city": {
                      "type": "string",
                      "nullable": true
                    },
                    "state": {
                      "type": "string",
                      "nullable": true
                    },
                    "street": {
                      "type": "string",
                      "nullable": true
                    },
                    "postalCode": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "fair_db_updateProductSupplier",
        "summary": "Update productSupplier.",
        "tags": [
          "product_supplier"
        ],
        "description": "Update productSupplier in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "ProductSupplierInput",
                "description": "A ProductSupplier",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "bic": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "homepage": {
                    "type": "string"
                  },
                  "iban": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "ratingPrice": {
                    "type": "integer"
                  },
                  "ratingSupply": {
                    "type": "integer"
                  },
                  "email": {
                    "type": "string",
                    "nullable": true
                  },
                  "vat": {
                    "type": "string",
                    "nullable": true
                  },
                  "city": {
                    "type": "string",
                    "nullable": true
                  },
                  "state": {
                    "type": "string",
                    "nullable": true
                  },
                  "street": {
                    "type": "string",
                    "nullable": true
                  },
                  "postalCode": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "additionalProperties": false,
                "required": [
                  "bic",
                  "description",
                  "homepage",
                  "iban",
                  "name",
                  "phone",
                  "ratingPrice",
                  "ratingSupply"
                ]
              }
            }
          },
          "required": true,
          "description": "A ProductSupplier"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "bic",
                  "city",
                  "description",
                  "email",
                  "homepage",
                  "iban",
                  "id",
                  "name",
                  "phone",
                  "postalCode",
                  "ratingPrice",
                  "ratingSupply",
                  "state",
                  "street",
                  "vat"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A ProductSupplier",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ProductSupplier",
                  "description": "A ProductSupplier",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "bic": {
                      "type": "string",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "homepage": {
                      "type": "string",
                      "nullable": true
                    },
                    "iban": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "phone": {
                      "type": "string",
                      "nullable": true
                    },
                    "ratingPrice": {
                      "type": "integer",
                      "nullable": true
                    },
                    "ratingSupply": {
                      "type": "integer",
                      "nullable": true
                    },
                    "email": {
                      "type": "string",
                      "nullable": true
                    },
                    "vat": {
                      "type": "string",
                      "nullable": true
                    },
                    "city": {
                      "type": "string",
                      "nullable": true
                    },
                    "state": {
                      "type": "string",
                      "nullable": true
                    },
                    "street": {
                      "type": "string",
                      "nullable": true
                    },
                    "postalCode": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "fair_db_deleteProductSupplier",
        "summary": "Delete productSupplier.",
        "tags": [
          "product_supplier"
        ],
        "description": "Delete one or more productSupplier from the Database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "bic",
                  "city",
                  "description",
                  "email",
                  "homepage",
                  "iban",
                  "id",
                  "name",
                  "phone",
                  "postalCode",
                  "ratingPrice",
                  "ratingSupply",
                  "state",
                  "street",
                  "vat"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A ProductSupplier",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ProductSupplier",
                  "description": "A ProductSupplier",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "bic": {
                      "type": "string",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "homepage": {
                      "type": "string",
                      "nullable": true
                    },
                    "iban": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "phone": {
                      "type": "string",
                      "nullable": true
                    },
                    "ratingPrice": {
                      "type": "integer",
                      "nullable": true
                    },
                    "ratingSupply": {
                      "type": "integer",
                      "nullable": true
                    },
                    "email": {
                      "type": "string",
                      "nullable": true
                    },
                    "vat": {
                      "type": "string",
                      "nullable": true
                    },
                    "city": {
                      "type": "string",
                      "nullable": true
                    },
                    "state": {
                      "type": "string",
                      "nullable": true
                    },
                    "street": {
                      "type": "string",
                      "nullable": true
                    },
                    "postalCode": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/productSupplier/{id}/product": {
      "get": {
        "operationId": "fair_db_getProductForProductSupplier",
        "summary": "Get product for productSupplier.",
        "tags": [
          "product_supplier"
        ],
        "description": "Fetch all the product for productSupplier from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "active",
                  "description",
                  "id",
                  "productSupplierId",
                  "title",
                  "unit"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Product",
                    "description": "A Product",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "active": {
                        "type": "integer",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "nullable": true
                      },
                      "productSupplierId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "title": {
                        "type": "string",
                        "nullable": true
                      },
                      "unit": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/productSupplier/{id}/productOrder": {
      "get": {
        "operationId": "fair_db_getProductOrderForProductSupplier",
        "summary": "Get productOrder for productSupplier.",
        "tags": [
          "product_supplier"
        ],
        "description": "Fetch all the productOrder for productSupplier from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "orderId",
                  "priceShipping",
                  "productSupplierId",
                  "quantity",
                  "tmDelivery",
                  "tmOrder"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "ProductOrder",
                    "description": "A ProductOrder",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "orderId": {
                        "type": "string",
                        "nullable": true
                      },
                      "priceShipping": {
                        "type": "number",
                        "nullable": true
                      },
                      "productSupplierId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "quantity": {
                        "type": "number",
                        "nullable": true
                      },
                      "tmDelivery": {
                        "type": "string",
                        "nullable": true
                      },
                      "tmOrder": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/productCategory/": {
      "get": {
        "operationId": "fair_db_getProductCategory",
        "summary": "Get productCategory.",
        "tags": [
          "product_category"
        ],
        "description": "Fetch productCategory from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "category",
                  "description",
                  "id"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.category.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.category.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.category.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.category.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.category.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.category.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.category.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.category.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.category.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.category.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.category.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.category.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.category",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.description",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.id",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "ProductCategory",
                    "description": "A ProductCategory",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "category": {
                        "type": "string",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "fair_db_createProductCategory",
        "summary": "Create productCategory.",
        "tags": [
          "product_category"
        ],
        "description": "Add new productCategory to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "ProductCategoryInput",
                "description": "A ProductCategory",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "category": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "category",
                  "description"
                ]
              }
            }
          },
          "required": true,
          "description": "A ProductCategory"
        },
        "responses": {
          "200": {
            "description": "A ProductCategory",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ProductCategory",
                  "description": "A ProductCategory",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "category": {
                      "type": "string",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "fair_db_updateProductCategory",
        "summary": "Update productCategory.",
        "tags": [
          "product_category"
        ],
        "description": "Update one or more productCategory in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "ProductCategoryInput",
                "description": "A ProductCategory",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "category": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "category",
                  "description"
                ]
              }
            }
          },
          "required": true,
          "description": "A ProductCategory"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "category",
                  "description",
                  "id"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.category.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.category.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.category.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.category.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.category.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.category.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.category.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.category.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.category.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.category.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.category.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.category.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "ProductCategory",
                    "description": "A ProductCategory",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "category": {
                        "type": "string",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/productCategory/{id}": {
      "get": {
        "operationId": "fair_db_getProductCategoryById",
        "summary": "Get ProductCategory by id.",
        "tags": [
          "product_category"
        ],
        "description": "Fetch ProductCategory using its id from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "category",
                  "description",
                  "id"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A ProductCategory",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ProductCategory",
                  "description": "A ProductCategory",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "category": {
                      "type": "string",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "fair_db_updateProductCategory",
        "summary": "Update productCategory.",
        "tags": [
          "product_category"
        ],
        "description": "Update productCategory in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "ProductCategoryInput",
                "description": "A ProductCategory",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "category": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "category",
                  "description"
                ]
              }
            }
          },
          "required": true,
          "description": "A ProductCategory"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "category",
                  "description",
                  "id"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A ProductCategory",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ProductCategory",
                  "description": "A ProductCategory",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "category": {
                      "type": "string",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "fair_db_deleteProductCategory",
        "summary": "Delete productCategory.",
        "tags": [
          "product_category"
        ],
        "description": "Delete one or more productCategory from the Database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "category",
                  "description",
                  "id"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A ProductCategory",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ProductCategory",
                  "description": "A ProductCategory",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "category": {
                      "type": "string",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/productCategory/{id}/productToProductCategoryProductCategoryId": {
      "get": {
        "operationId": "fair_db_getProductToProductCategoryForProductCategory",
        "summary": "Get productToProductCategory for productCategory.",
        "tags": [
          "product_category"
        ],
        "description": "Fetch all the productToProductCategory for productCategory from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "productCategoryId",
                  "productId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "ProductToProductCategory",
                    "description": "A ProductToProductCategory",
                    "type": "object",
                    "properties": {
                      "productCategoryId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "productId": {
                        "type": "integer",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/product/": {
      "get": {
        "operationId": "fair_db_getProduct",
        "summary": "Get product.",
        "tags": [
          "product"
        ],
        "description": "Fetch product from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "active",
                  "description",
                  "id",
                  "productSupplierId",
                  "title",
                  "unit"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.active.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.active.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.active.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.active.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.active.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.active.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.active.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.active.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.active.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.active.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.active.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.active.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productSupplierId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productSupplierId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productSupplierId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productSupplierId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productSupplierId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.unit.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.unit.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.unit.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.unit.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.unit.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.unit.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.unit.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.unit.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.unit.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.unit.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.unit.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.unit.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.active",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.description",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.id",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.productSupplierId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.title",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.unit",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Product",
                    "description": "A Product",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "active": {
                        "type": "integer",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "nullable": true
                      },
                      "productSupplierId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "title": {
                        "type": "string",
                        "nullable": true
                      },
                      "unit": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "fair_db_createProduct",
        "summary": "Create product.",
        "tags": [
          "product"
        ],
        "description": "Add new product to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "ProductInput",
                "description": "A Product",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "active": {
                    "type": "integer"
                  },
                  "description": {
                    "type": "string"
                  },
                  "productSupplierId": {
                    "type": "integer",
                    "nullable": true
                  },
                  "title": {
                    "type": "string"
                  },
                  "unit": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "active",
                  "description",
                  "title",
                  "unit"
                ]
              }
            }
          },
          "required": true,
          "description": "A Product"
        },
        "responses": {
          "200": {
            "description": "A Product",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Product",
                  "description": "A Product",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "active": {
                      "type": "integer",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "productSupplierId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "unit": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "fair_db_updateProduct",
        "summary": "Update product.",
        "tags": [
          "product"
        ],
        "description": "Update one or more product in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "ProductInput",
                "description": "A Product",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "active": {
                    "type": "integer"
                  },
                  "description": {
                    "type": "string"
                  },
                  "productSupplierId": {
                    "type": "integer",
                    "nullable": true
                  },
                  "title": {
                    "type": "string"
                  },
                  "unit": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "active",
                  "description",
                  "title",
                  "unit"
                ]
              }
            }
          },
          "required": true,
          "description": "A Product"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "active",
                  "description",
                  "id",
                  "productSupplierId",
                  "title",
                  "unit"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.active.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.active.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.active.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.active.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.active.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.active.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.active.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.active.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.active.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.active.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.active.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.active.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productSupplierId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productSupplierId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productSupplierId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productSupplierId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productSupplierId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.unit.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.unit.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.unit.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.unit.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.unit.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.unit.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.unit.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.unit.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.unit.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.unit.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.unit.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.unit.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Product",
                    "description": "A Product",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "active": {
                        "type": "integer",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "nullable": true
                      },
                      "productSupplierId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "title": {
                        "type": "string",
                        "nullable": true
                      },
                      "unit": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/product/{id}": {
      "get": {
        "operationId": "fair_db_getProductById",
        "summary": "Get Product by id.",
        "tags": [
          "product"
        ],
        "description": "Fetch Product using its id from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "active",
                  "description",
                  "id",
                  "productSupplierId",
                  "title",
                  "unit"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Product",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Product",
                  "description": "A Product",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "active": {
                      "type": "integer",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "productSupplierId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "unit": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "fair_db_updateProduct",
        "summary": "Update product.",
        "tags": [
          "product"
        ],
        "description": "Update product in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "ProductInput",
                "description": "A Product",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "active": {
                    "type": "integer"
                  },
                  "description": {
                    "type": "string"
                  },
                  "productSupplierId": {
                    "type": "integer",
                    "nullable": true
                  },
                  "title": {
                    "type": "string"
                  },
                  "unit": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "active",
                  "description",
                  "title",
                  "unit"
                ]
              }
            }
          },
          "required": true,
          "description": "A Product"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "active",
                  "description",
                  "id",
                  "productSupplierId",
                  "title",
                  "unit"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Product",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Product",
                  "description": "A Product",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "active": {
                      "type": "integer",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "productSupplierId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "unit": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "fair_db_deleteProduct",
        "summary": "Delete product.",
        "tags": [
          "product"
        ],
        "description": "Delete one or more product from the Database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "active",
                  "description",
                  "id",
                  "productSupplierId",
                  "title",
                  "unit"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Product",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Product",
                  "description": "A Product",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "active": {
                      "type": "integer",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "productSupplierId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "unit": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/product/{id}/productToProductCategoryProductId": {
      "get": {
        "operationId": "fair_db_getProductToProductCategoryForProduct",
        "summary": "Get productToProductCategory for product.",
        "tags": [
          "product"
        ],
        "description": "Fetch all the productToProductCategory for product from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "productCategoryId",
                  "productId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "ProductToProductCategory",
                    "description": "A ProductToProductCategory",
                    "type": "object",
                    "properties": {
                      "productCategoryId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "productId": {
                        "type": "integer",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/product/{id}/productOrderLineProductId": {
      "get": {
        "operationId": "fair_db_getProductOrderLineForProduct",
        "summary": "Get productOrderLine for product.",
        "tags": [
          "product"
        ],
        "description": "Fetch all the productOrderLine for product from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "price",
                  "priceTaxRatePercent",
                  "productId",
                  "productOrderId",
                  "quantity"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "ProductOrderLine",
                    "description": "A ProductOrderLine",
                    "type": "object",
                    "properties": {
                      "productId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "productOrderId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "price": {
                        "type": "number",
                        "nullable": true
                      },
                      "priceTaxRatePercent": {
                        "type": "number",
                        "nullable": true
                      },
                      "quantity": {
                        "type": "number",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/product/{id}/fairExecutionProductProductId": {
      "get": {
        "operationId": "fair_db_getFairExecutionProductForProduct",
        "summary": "Get fairExecutionProduct for product.",
        "tags": [
          "product"
        ],
        "description": "Fetch all the fairExecutionProduct for product from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairExecutionId",
                  "id",
                  "productId",
                  "quantityBack",
                  "quantityThere"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FairExecutionProduct",
                    "description": "A FairExecutionProduct",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fairExecutionId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "productId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "quantityBack": {
                        "type": "number",
                        "nullable": true
                      },
                      "quantityThere": {
                        "type": "number",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/product/{id}/product_supplier": {
      "get": {
        "operationId": "fair_db_getProductSupplierForProduct",
        "summary": "Get productSupplier for product.",
        "tags": [
          "product"
        ],
        "description": "Fetch the productSupplier for product from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "bic",
                  "city",
                  "description",
                  "email",
                  "homepage",
                  "iban",
                  "id",
                  "name",
                  "phone",
                  "postalCode",
                  "ratingPrice",
                  "ratingSupply",
                  "state",
                  "street",
                  "vat"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A ProductSupplier",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ProductSupplier",
                  "description": "A ProductSupplier",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "bic": {
                      "type": "string",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "homepage": {
                      "type": "string",
                      "nullable": true
                    },
                    "iban": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "phone": {
                      "type": "string",
                      "nullable": true
                    },
                    "ratingPrice": {
                      "type": "integer",
                      "nullable": true
                    },
                    "ratingSupply": {
                      "type": "integer",
                      "nullable": true
                    },
                    "email": {
                      "type": "string",
                      "nullable": true
                    },
                    "vat": {
                      "type": "string",
                      "nullable": true
                    },
                    "city": {
                      "type": "string",
                      "nullable": true
                    },
                    "state": {
                      "type": "string",
                      "nullable": true
                    },
                    "street": {
                      "type": "string",
                      "nullable": true
                    },
                    "postalCode": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/productToProductCategory/": {
      "get": {
        "operationId": "fair_db_getProductToProductCategory",
        "summary": "Get productToProductCategory.",
        "tags": [
          "product_to_product_category"
        ],
        "description": "Fetch productToProductCategory from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "productCategoryId",
                  "productId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productCategoryId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productCategoryId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productCategoryId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productCategoryId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productCategoryId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productCategoryId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productCategoryId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productCategoryId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productCategoryId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productCategoryId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productCategoryId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productCategoryId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.productCategoryId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.productId",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "ProductToProductCategory",
                    "description": "A ProductToProductCategory",
                    "type": "object",
                    "properties": {
                      "productCategoryId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "productId": {
                        "type": "integer",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "fair_db_createProductToProductCategory",
        "summary": "Create productToProductCategory.",
        "tags": [
          "product_to_product_category"
        ],
        "description": "Add new productToProductCategory to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "ProductToProductCategoryInput",
                "description": "A ProductToProductCategory",
                "type": "object",
                "properties": {
                  "productCategoryId": {
                    "type": "integer"
                  },
                  "productId": {
                    "type": "integer"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "description": "A ProductToProductCategory"
        },
        "responses": {
          "200": {
            "description": "A ProductToProductCategory",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ProductToProductCategory",
                  "description": "A ProductToProductCategory",
                  "type": "object",
                  "properties": {
                    "productCategoryId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "productId": {
                      "type": "integer",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "fair_db_updateProductToProductCategory",
        "summary": "Update productToProductCategory.",
        "tags": [
          "product_to_product_category"
        ],
        "description": "Update one or more productToProductCategory in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "ProductToProductCategoryInput",
                "description": "A ProductToProductCategory",
                "type": "object",
                "properties": {
                  "productCategoryId": {
                    "type": "integer"
                  },
                  "productId": {
                    "type": "integer"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "description": "A ProductToProductCategory"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "productCategoryId",
                  "productId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productCategoryId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productCategoryId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productCategoryId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productCategoryId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productCategoryId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productCategoryId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productCategoryId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productCategoryId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productCategoryId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productCategoryId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productCategoryId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productCategoryId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "ProductToProductCategory",
                    "description": "A ProductToProductCategory",
                    "type": "object",
                    "properties": {
                      "productCategoryId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "productId": {
                        "type": "integer",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/productToProductCategory/productCategory/{productCategoryId}/product/{productId}": {
      "get": {
        "operationId": "fair_db_getProductToProductCategoryByProductCategoryIdAndProductId",
        "summary": "Get ProductToProductCategory by ProductCategoryIdAndProductId.",
        "tags": [
          "product_to_product_category"
        ],
        "description": "Fetch ProductToProductCategory by ProductCategoryIdAndProductId from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "productCategoryId",
                  "productId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "productCategoryId",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "productId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A ProductToProductCategory",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ProductToProductCategory",
                  "description": "A ProductToProductCategory",
                  "type": "object",
                  "properties": {
                    "productCategoryId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "productId": {
                      "type": "integer",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Update ProductToProductCategory by ProductCategoryIdAndProductId.",
        "tags": [
          "product_to_product_category"
        ],
        "description": "Update ProductToProductCategory by ProductCategoryIdAndProductId in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "ProductToProductCategoryInput",
                "description": "A ProductToProductCategory",
                "type": "object",
                "properties": {
                  "productCategoryId": {
                    "type": "integer"
                  },
                  "productId": {
                    "type": "integer"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "description": "A ProductToProductCategory"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "productCategoryId",
                  "productId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "productCategoryId",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "productId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A ProductToProductCategory",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ProductToProductCategory",
                  "description": "A ProductToProductCategory",
                  "type": "object",
                  "properties": {
                    "productCategoryId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "productId": {
                      "type": "integer",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update ProductToProductCategory by ProductCategoryIdAndProductId.",
        "tags": [
          "product_to_product_category"
        ],
        "description": "Update ProductToProductCategory by ProductCategoryIdAndProductId in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "ProductToProductCategoryInput",
                "description": "A ProductToProductCategory",
                "type": "object",
                "properties": {
                  "productCategoryId": {
                    "type": "integer"
                  },
                  "productId": {
                    "type": "integer"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "description": "A ProductToProductCategory"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "productCategoryId",
                  "productId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "productCategoryId",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "productId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A ProductToProductCategory",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ProductToProductCategory",
                  "description": "A ProductToProductCategory",
                  "type": "object",
                  "properties": {
                    "productCategoryId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "productId": {
                      "type": "integer",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete ProductToProductCategory by ProductCategoryIdAndProductId.",
        "tags": [
          "product_to_product_category"
        ],
        "description": "Delete ProductToProductCategory by ProductCategoryIdAndProductId from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "productCategoryId",
                  "productId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "productCategoryId",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "productId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A ProductToProductCategory",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ProductToProductCategory",
                  "description": "A ProductToProductCategory",
                  "type": "object",
                  "properties": {
                    "productCategoryId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "productId": {
                      "type": "integer",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/productOrder/": {
      "get": {
        "operationId": "fair_db_getProductOrder",
        "summary": "Get productOrder.",
        "tags": [
          "product_order"
        ],
        "description": "Fetch productOrder from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "orderId",
                  "priceShipping",
                  "productSupplierId",
                  "quantity",
                  "tmDelivery",
                  "tmOrder"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.orderId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.orderId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.orderId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.orderId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.orderId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.orderId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.orderId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.orderId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.orderId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.orderId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.orderId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.orderId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceShipping.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceShipping.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceShipping.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceShipping.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceShipping.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceShipping.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceShipping.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.priceShipping.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.priceShipping.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.priceShipping.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.priceShipping.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.priceShipping.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productSupplierId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productSupplierId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productSupplierId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productSupplierId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productSupplierId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantity.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantity.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantity.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantity.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantity.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDelivery.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDelivery.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDelivery.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDelivery.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDelivery.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDelivery.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDelivery.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDelivery.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDelivery.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDelivery.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDelivery.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDelivery.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmOrder.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmOrder.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmOrder.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmOrder.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmOrder.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmOrder.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmOrder.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmOrder.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmOrder.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmOrder.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmOrder.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmOrder.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.id",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.orderId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.priceShipping",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.productSupplierId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.quantity",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.tmDelivery",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.tmOrder",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "ProductOrder",
                    "description": "A ProductOrder",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "orderId": {
                        "type": "string",
                        "nullable": true
                      },
                      "priceShipping": {
                        "type": "number",
                        "nullable": true
                      },
                      "productSupplierId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "quantity": {
                        "type": "number",
                        "nullable": true
                      },
                      "tmDelivery": {
                        "type": "string",
                        "nullable": true
                      },
                      "tmOrder": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "fair_db_createProductOrder",
        "summary": "Create productOrder.",
        "tags": [
          "product_order"
        ],
        "description": "Add new productOrder to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "ProductOrderInput",
                "description": "A ProductOrder",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "orderId": {
                    "type": "string"
                  },
                  "priceShipping": {
                    "type": "number"
                  },
                  "productSupplierId": {
                    "type": "integer",
                    "nullable": true
                  },
                  "quantity": {
                    "type": "number"
                  },
                  "tmDelivery": {
                    "type": "string",
                    "nullable": true
                  },
                  "tmOrder": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "additionalProperties": false,
                "required": [
                  "orderId",
                  "priceShipping",
                  "quantity"
                ]
              }
            }
          },
          "required": true,
          "description": "A ProductOrder"
        },
        "responses": {
          "200": {
            "description": "A ProductOrder",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ProductOrder",
                  "description": "A ProductOrder",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "orderId": {
                      "type": "string",
                      "nullable": true
                    },
                    "priceShipping": {
                      "type": "number",
                      "nullable": true
                    },
                    "productSupplierId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "quantity": {
                      "type": "number",
                      "nullable": true
                    },
                    "tmDelivery": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmOrder": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "fair_db_updateProductOrder",
        "summary": "Update productOrder.",
        "tags": [
          "product_order"
        ],
        "description": "Update one or more productOrder in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "ProductOrderInput",
                "description": "A ProductOrder",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "orderId": {
                    "type": "string"
                  },
                  "priceShipping": {
                    "type": "number"
                  },
                  "productSupplierId": {
                    "type": "integer",
                    "nullable": true
                  },
                  "quantity": {
                    "type": "number"
                  },
                  "tmDelivery": {
                    "type": "string",
                    "nullable": true
                  },
                  "tmOrder": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "additionalProperties": false,
                "required": [
                  "orderId",
                  "priceShipping",
                  "quantity"
                ]
              }
            }
          },
          "required": true,
          "description": "A ProductOrder"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "orderId",
                  "priceShipping",
                  "productSupplierId",
                  "quantity",
                  "tmDelivery",
                  "tmOrder"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.orderId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.orderId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.orderId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.orderId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.orderId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.orderId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.orderId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.orderId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.orderId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.orderId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.orderId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.orderId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceShipping.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceShipping.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceShipping.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceShipping.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceShipping.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceShipping.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceShipping.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.priceShipping.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.priceShipping.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.priceShipping.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.priceShipping.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.priceShipping.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productSupplierId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productSupplierId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productSupplierId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productSupplierId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productSupplierId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productSupplierId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantity.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantity.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantity.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantity.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantity.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDelivery.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDelivery.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDelivery.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDelivery.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDelivery.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDelivery.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDelivery.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDelivery.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDelivery.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDelivery.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDelivery.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDelivery.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmOrder.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmOrder.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmOrder.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmOrder.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmOrder.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmOrder.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmOrder.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmOrder.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmOrder.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmOrder.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmOrder.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmOrder.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "ProductOrder",
                    "description": "A ProductOrder",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "orderId": {
                        "type": "string",
                        "nullable": true
                      },
                      "priceShipping": {
                        "type": "number",
                        "nullable": true
                      },
                      "productSupplierId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "quantity": {
                        "type": "number",
                        "nullable": true
                      },
                      "tmDelivery": {
                        "type": "string",
                        "nullable": true
                      },
                      "tmOrder": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/productOrder/{id}": {
      "get": {
        "operationId": "fair_db_getProductOrderById",
        "summary": "Get ProductOrder by id.",
        "tags": [
          "product_order"
        ],
        "description": "Fetch ProductOrder using its id from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "orderId",
                  "priceShipping",
                  "productSupplierId",
                  "quantity",
                  "tmDelivery",
                  "tmOrder"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A ProductOrder",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ProductOrder",
                  "description": "A ProductOrder",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "orderId": {
                      "type": "string",
                      "nullable": true
                    },
                    "priceShipping": {
                      "type": "number",
                      "nullable": true
                    },
                    "productSupplierId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "quantity": {
                      "type": "number",
                      "nullable": true
                    },
                    "tmDelivery": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmOrder": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "fair_db_updateProductOrder",
        "summary": "Update productOrder.",
        "tags": [
          "product_order"
        ],
        "description": "Update productOrder in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "ProductOrderInput",
                "description": "A ProductOrder",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "orderId": {
                    "type": "string"
                  },
                  "priceShipping": {
                    "type": "number"
                  },
                  "productSupplierId": {
                    "type": "integer",
                    "nullable": true
                  },
                  "quantity": {
                    "type": "number"
                  },
                  "tmDelivery": {
                    "type": "string",
                    "nullable": true
                  },
                  "tmOrder": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "additionalProperties": false,
                "required": [
                  "orderId",
                  "priceShipping",
                  "quantity"
                ]
              }
            }
          },
          "required": true,
          "description": "A ProductOrder"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "orderId",
                  "priceShipping",
                  "productSupplierId",
                  "quantity",
                  "tmDelivery",
                  "tmOrder"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A ProductOrder",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ProductOrder",
                  "description": "A ProductOrder",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "orderId": {
                      "type": "string",
                      "nullable": true
                    },
                    "priceShipping": {
                      "type": "number",
                      "nullable": true
                    },
                    "productSupplierId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "quantity": {
                      "type": "number",
                      "nullable": true
                    },
                    "tmDelivery": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmOrder": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "fair_db_deleteProductOrder",
        "summary": "Delete productOrder.",
        "tags": [
          "product_order"
        ],
        "description": "Delete one or more productOrder from the Database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "orderId",
                  "priceShipping",
                  "productSupplierId",
                  "quantity",
                  "tmDelivery",
                  "tmOrder"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A ProductOrder",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ProductOrder",
                  "description": "A ProductOrder",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "orderId": {
                      "type": "string",
                      "nullable": true
                    },
                    "priceShipping": {
                      "type": "number",
                      "nullable": true
                    },
                    "productSupplierId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "quantity": {
                      "type": "number",
                      "nullable": true
                    },
                    "tmDelivery": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmOrder": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/productOrder/{id}/productOrderLineProductOrderId": {
      "get": {
        "operationId": "fair_db_getProductOrderLineForProductOrder",
        "summary": "Get productOrderLine for productOrder.",
        "tags": [
          "product_order"
        ],
        "description": "Fetch all the productOrderLine for productOrder from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "price",
                  "priceTaxRatePercent",
                  "productId",
                  "productOrderId",
                  "quantity"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "ProductOrderLine",
                    "description": "A ProductOrderLine",
                    "type": "object",
                    "properties": {
                      "productId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "productOrderId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "price": {
                        "type": "number",
                        "nullable": true
                      },
                      "priceTaxRatePercent": {
                        "type": "number",
                        "nullable": true
                      },
                      "quantity": {
                        "type": "number",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/productOrder/{id}/product_supplier": {
      "get": {
        "operationId": "fair_db_getProductSupplierForProductOrder",
        "summary": "Get productSupplier for productOrder.",
        "tags": [
          "product_order"
        ],
        "description": "Fetch the productSupplier for productOrder from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "bic",
                  "city",
                  "description",
                  "email",
                  "homepage",
                  "iban",
                  "id",
                  "name",
                  "phone",
                  "postalCode",
                  "ratingPrice",
                  "ratingSupply",
                  "state",
                  "street",
                  "vat"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A ProductSupplier",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ProductSupplier",
                  "description": "A ProductSupplier",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "bic": {
                      "type": "string",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "homepage": {
                      "type": "string",
                      "nullable": true
                    },
                    "iban": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "phone": {
                      "type": "string",
                      "nullable": true
                    },
                    "ratingPrice": {
                      "type": "integer",
                      "nullable": true
                    },
                    "ratingSupply": {
                      "type": "integer",
                      "nullable": true
                    },
                    "email": {
                      "type": "string",
                      "nullable": true
                    },
                    "vat": {
                      "type": "string",
                      "nullable": true
                    },
                    "city": {
                      "type": "string",
                      "nullable": true
                    },
                    "state": {
                      "type": "string",
                      "nullable": true
                    },
                    "street": {
                      "type": "string",
                      "nullable": true
                    },
                    "postalCode": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/productOrderLine/": {
      "get": {
        "operationId": "fair_db_getProductOrderLine",
        "summary": "Get productOrderLine.",
        "tags": [
          "product_order_line"
        ],
        "description": "Fetch productOrderLine from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "price",
                  "priceTaxRatePercent",
                  "productId",
                  "productOrderId",
                  "quantity"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.price.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.price.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.price.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.price.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.price.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceTaxRatePercent.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceTaxRatePercent.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceTaxRatePercent.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceTaxRatePercent.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceTaxRatePercent.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceTaxRatePercent.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceTaxRatePercent.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.priceTaxRatePercent.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.priceTaxRatePercent.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.priceTaxRatePercent.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.priceTaxRatePercent.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.priceTaxRatePercent.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productOrderId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productOrderId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productOrderId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productOrderId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productOrderId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productOrderId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productOrderId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productOrderId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productOrderId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productOrderId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productOrderId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productOrderId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantity.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantity.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantity.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantity.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantity.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.price",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.priceTaxRatePercent",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.productId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.productOrderId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.quantity",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "ProductOrderLine",
                    "description": "A ProductOrderLine",
                    "type": "object",
                    "properties": {
                      "productId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "productOrderId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "price": {
                        "type": "number",
                        "nullable": true
                      },
                      "priceTaxRatePercent": {
                        "type": "number",
                        "nullable": true
                      },
                      "quantity": {
                        "type": "number",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "fair_db_createProductOrderLine",
        "summary": "Create productOrderLine.",
        "tags": [
          "product_order_line"
        ],
        "description": "Add new productOrderLine to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "ProductOrderLineInput",
                "description": "A ProductOrderLine",
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "integer"
                  },
                  "productOrderId": {
                    "type": "integer"
                  },
                  "price": {
                    "type": "number"
                  },
                  "priceTaxRatePercent": {
                    "type": "number"
                  },
                  "quantity": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "price",
                  "priceTaxRatePercent",
                  "quantity"
                ]
              }
            }
          },
          "required": true,
          "description": "A ProductOrderLine"
        },
        "responses": {
          "200": {
            "description": "A ProductOrderLine",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ProductOrderLine",
                  "description": "A ProductOrderLine",
                  "type": "object",
                  "properties": {
                    "productId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "productOrderId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "price": {
                      "type": "number",
                      "nullable": true
                    },
                    "priceTaxRatePercent": {
                      "type": "number",
                      "nullable": true
                    },
                    "quantity": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "fair_db_updateProductOrderLine",
        "summary": "Update productOrderLine.",
        "tags": [
          "product_order_line"
        ],
        "description": "Update one or more productOrderLine in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "ProductOrderLineInput",
                "description": "A ProductOrderLine",
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "integer"
                  },
                  "productOrderId": {
                    "type": "integer"
                  },
                  "price": {
                    "type": "number"
                  },
                  "priceTaxRatePercent": {
                    "type": "number"
                  },
                  "quantity": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "price",
                  "priceTaxRatePercent",
                  "quantity"
                ]
              }
            }
          },
          "required": true,
          "description": "A ProductOrderLine"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "price",
                  "priceTaxRatePercent",
                  "productId",
                  "productOrderId",
                  "quantity"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.price.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.price.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.price.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.price.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.price.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceTaxRatePercent.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceTaxRatePercent.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceTaxRatePercent.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceTaxRatePercent.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceTaxRatePercent.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceTaxRatePercent.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.priceTaxRatePercent.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.priceTaxRatePercent.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.priceTaxRatePercent.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.priceTaxRatePercent.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.priceTaxRatePercent.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.priceTaxRatePercent.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productOrderId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productOrderId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productOrderId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productOrderId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productOrderId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productOrderId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productOrderId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productOrderId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productOrderId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productOrderId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productOrderId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productOrderId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantity.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantity.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantity.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantity.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantity.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantity.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "ProductOrderLine",
                    "description": "A ProductOrderLine",
                    "type": "object",
                    "properties": {
                      "productId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "productOrderId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "price": {
                        "type": "number",
                        "nullable": true
                      },
                      "priceTaxRatePercent": {
                        "type": "number",
                        "nullable": true
                      },
                      "quantity": {
                        "type": "number",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/productOrderLine/product/{productId}/productOrder/{productOrderId}": {
      "get": {
        "operationId": "fair_db_getProductOrderLineByProductIdAndProductOrderId",
        "summary": "Get ProductOrderLine by ProductIdAndProductOrderId.",
        "tags": [
          "product_order_line"
        ],
        "description": "Fetch ProductOrderLine by ProductIdAndProductOrderId from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "price",
                  "priceTaxRatePercent",
                  "productId",
                  "productOrderId",
                  "quantity"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "productId",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "productOrderId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A ProductOrderLine",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ProductOrderLine",
                  "description": "A ProductOrderLine",
                  "type": "object",
                  "properties": {
                    "productId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "productOrderId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "price": {
                      "type": "number",
                      "nullable": true
                    },
                    "priceTaxRatePercent": {
                      "type": "number",
                      "nullable": true
                    },
                    "quantity": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Update ProductOrderLine by ProductIdAndProductOrderId.",
        "tags": [
          "product_order_line"
        ],
        "description": "Update ProductOrderLine by ProductIdAndProductOrderId in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "ProductOrderLineInput",
                "description": "A ProductOrderLine",
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "integer"
                  },
                  "productOrderId": {
                    "type": "integer"
                  },
                  "price": {
                    "type": "number"
                  },
                  "priceTaxRatePercent": {
                    "type": "number"
                  },
                  "quantity": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "price",
                  "priceTaxRatePercent",
                  "quantity"
                ]
              }
            }
          },
          "required": true,
          "description": "A ProductOrderLine"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "price",
                  "priceTaxRatePercent",
                  "productId",
                  "productOrderId",
                  "quantity"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "productId",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "productOrderId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A ProductOrderLine",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ProductOrderLine",
                  "description": "A ProductOrderLine",
                  "type": "object",
                  "properties": {
                    "productId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "productOrderId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "price": {
                      "type": "number",
                      "nullable": true
                    },
                    "priceTaxRatePercent": {
                      "type": "number",
                      "nullable": true
                    },
                    "quantity": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update ProductOrderLine by ProductIdAndProductOrderId.",
        "tags": [
          "product_order_line"
        ],
        "description": "Update ProductOrderLine by ProductIdAndProductOrderId in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "ProductOrderLineInput",
                "description": "A ProductOrderLine",
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "integer"
                  },
                  "productOrderId": {
                    "type": "integer"
                  },
                  "price": {
                    "type": "number"
                  },
                  "priceTaxRatePercent": {
                    "type": "number"
                  },
                  "quantity": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "price",
                  "priceTaxRatePercent",
                  "quantity"
                ]
              }
            }
          },
          "required": true,
          "description": "A ProductOrderLine"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "price",
                  "priceTaxRatePercent",
                  "productId",
                  "productOrderId",
                  "quantity"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "productId",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "productOrderId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A ProductOrderLine",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ProductOrderLine",
                  "description": "A ProductOrderLine",
                  "type": "object",
                  "properties": {
                    "productId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "productOrderId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "price": {
                      "type": "number",
                      "nullable": true
                    },
                    "priceTaxRatePercent": {
                      "type": "number",
                      "nullable": true
                    },
                    "quantity": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete ProductOrderLine by ProductIdAndProductOrderId.",
        "tags": [
          "product_order_line"
        ],
        "description": "Delete ProductOrderLine by ProductIdAndProductOrderId from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "price",
                  "priceTaxRatePercent",
                  "productId",
                  "productOrderId",
                  "quantity"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "productId",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "productOrderId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A ProductOrderLine",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ProductOrderLine",
                  "description": "A ProductOrderLine",
                  "type": "object",
                  "properties": {
                    "productId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "productOrderId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "price": {
                      "type": "number",
                      "nullable": true
                    },
                    "priceTaxRatePercent": {
                      "type": "number",
                      "nullable": true
                    },
                    "quantity": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/fairPresenter/": {
      "get": {
        "operationId": "fair_db_getFairPresenter",
        "summary": "Get fairPresenter.",
        "tags": [
          "fair_presenter"
        ],
        "description": "Fetch fairPresenter from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "bic",
                  "description",
                  "homepage",
                  "iban",
                  "id",
                  "name",
                  "phone",
                  "ratingFair",
                  "ratingPrice"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingFair.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingFair.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingFair.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingFair.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingFair.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingFair.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingFair.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingFair.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingFair.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingFair.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingFair.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingFair.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPrice.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPrice.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPrice.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPrice.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPrice.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.bic",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.description",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.homepage",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.iban",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.id",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.name",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.phone",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.ratingFair",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.ratingPrice",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FairPresenter",
                    "description": "A FairPresenter",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "bic": {
                        "type": "string",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "nullable": true
                      },
                      "homepage": {
                        "type": "string",
                        "nullable": true
                      },
                      "iban": {
                        "type": "string",
                        "nullable": true
                      },
                      "name": {
                        "type": "string",
                        "nullable": true
                      },
                      "phone": {
                        "type": "string",
                        "nullable": true
                      },
                      "ratingFair": {
                        "type": "integer",
                        "nullable": true
                      },
                      "ratingPrice": {
                        "type": "integer",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "fair_db_createFairPresenter",
        "summary": "Create fairPresenter.",
        "tags": [
          "fair_presenter"
        ],
        "description": "Add new fairPresenter to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairPresenterInput",
                "description": "A FairPresenter",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "bic": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "homepage": {
                    "type": "string"
                  },
                  "iban": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "ratingFair": {
                    "type": "integer"
                  },
                  "ratingPrice": {
                    "type": "integer"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "bic",
                  "description",
                  "homepage",
                  "iban",
                  "name",
                  "phone",
                  "ratingFair",
                  "ratingPrice"
                ]
              }
            }
          },
          "required": true,
          "description": "A FairPresenter"
        },
        "responses": {
          "200": {
            "description": "A FairPresenter",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairPresenter",
                  "description": "A FairPresenter",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "bic": {
                      "type": "string",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "homepage": {
                      "type": "string",
                      "nullable": true
                    },
                    "iban": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "phone": {
                      "type": "string",
                      "nullable": true
                    },
                    "ratingFair": {
                      "type": "integer",
                      "nullable": true
                    },
                    "ratingPrice": {
                      "type": "integer",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "fair_db_updateFairPresenter",
        "summary": "Update fairPresenter.",
        "tags": [
          "fair_presenter"
        ],
        "description": "Update one or more fairPresenter in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairPresenterInput",
                "description": "A FairPresenter",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "bic": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "homepage": {
                    "type": "string"
                  },
                  "iban": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "ratingFair": {
                    "type": "integer"
                  },
                  "ratingPrice": {
                    "type": "integer"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "bic",
                  "description",
                  "homepage",
                  "iban",
                  "name",
                  "phone",
                  "ratingFair",
                  "ratingPrice"
                ]
              }
            }
          },
          "required": true,
          "description": "A FairPresenter"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "bic",
                  "description",
                  "homepage",
                  "iban",
                  "id",
                  "name",
                  "phone",
                  "ratingFair",
                  "ratingPrice"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bic.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.homepage.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.iban.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingFair.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingFair.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingFair.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingFair.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingFair.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingFair.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingFair.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingFair.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingFair.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingFair.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingFair.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingFair.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPrice.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPrice.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPrice.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPrice.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPrice.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPrice.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FairPresenter",
                    "description": "A FairPresenter",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "bic": {
                        "type": "string",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "nullable": true
                      },
                      "homepage": {
                        "type": "string",
                        "nullable": true
                      },
                      "iban": {
                        "type": "string",
                        "nullable": true
                      },
                      "name": {
                        "type": "string",
                        "nullable": true
                      },
                      "phone": {
                        "type": "string",
                        "nullable": true
                      },
                      "ratingFair": {
                        "type": "integer",
                        "nullable": true
                      },
                      "ratingPrice": {
                        "type": "integer",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fairPresenter/{id}": {
      "get": {
        "operationId": "fair_db_getFairPresenterById",
        "summary": "Get FairPresenter by id.",
        "tags": [
          "fair_presenter"
        ],
        "description": "Fetch FairPresenter using its id from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "bic",
                  "description",
                  "homepage",
                  "iban",
                  "id",
                  "name",
                  "phone",
                  "ratingFair",
                  "ratingPrice"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairPresenter",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairPresenter",
                  "description": "A FairPresenter",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "bic": {
                      "type": "string",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "homepage": {
                      "type": "string",
                      "nullable": true
                    },
                    "iban": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "phone": {
                      "type": "string",
                      "nullable": true
                    },
                    "ratingFair": {
                      "type": "integer",
                      "nullable": true
                    },
                    "ratingPrice": {
                      "type": "integer",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "fair_db_updateFairPresenter",
        "summary": "Update fairPresenter.",
        "tags": [
          "fair_presenter"
        ],
        "description": "Update fairPresenter in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairPresenterInput",
                "description": "A FairPresenter",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "bic": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "homepage": {
                    "type": "string"
                  },
                  "iban": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "ratingFair": {
                    "type": "integer"
                  },
                  "ratingPrice": {
                    "type": "integer"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "bic",
                  "description",
                  "homepage",
                  "iban",
                  "name",
                  "phone",
                  "ratingFair",
                  "ratingPrice"
                ]
              }
            }
          },
          "required": true,
          "description": "A FairPresenter"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "bic",
                  "description",
                  "homepage",
                  "iban",
                  "id",
                  "name",
                  "phone",
                  "ratingFair",
                  "ratingPrice"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairPresenter",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairPresenter",
                  "description": "A FairPresenter",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "bic": {
                      "type": "string",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "homepage": {
                      "type": "string",
                      "nullable": true
                    },
                    "iban": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "phone": {
                      "type": "string",
                      "nullable": true
                    },
                    "ratingFair": {
                      "type": "integer",
                      "nullable": true
                    },
                    "ratingPrice": {
                      "type": "integer",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "fair_db_deleteFairPresenter",
        "summary": "Delete fairPresenter.",
        "tags": [
          "fair_presenter"
        ],
        "description": "Delete one or more fairPresenter from the Database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "bic",
                  "description",
                  "homepage",
                  "iban",
                  "id",
                  "name",
                  "phone",
                  "ratingFair",
                  "ratingPrice"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairPresenter",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairPresenter",
                  "description": "A FairPresenter",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "bic": {
                      "type": "string",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "homepage": {
                      "type": "string",
                      "nullable": true
                    },
                    "iban": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "phone": {
                      "type": "string",
                      "nullable": true
                    },
                    "ratingFair": {
                      "type": "integer",
                      "nullable": true
                    },
                    "ratingPrice": {
                      "type": "integer",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/fairPresenter/{id}/fair": {
      "get": {
        "operationId": "fair_db_getFairForFairPresenter",
        "summary": "Get fair for fairPresenter.",
        "tags": [
          "fair_presenter"
        ],
        "description": "Fetch all the fair for fairPresenter from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "city",
                  "fairPresenterId",
                  "id",
                  "notes",
                  "sellingHoursUsually",
                  "street",
                  "title",
                  "usualPrice",
                  "usualTax"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Fair",
                    "description": "A Fair",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fairPresenterId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "city": {
                        "type": "string",
                        "nullable": true
                      },
                      "notes": {
                        "type": "string",
                        "nullable": true
                      },
                      "sellingHoursUsually": {
                        "type": "integer",
                        "nullable": true
                      },
                      "street": {
                        "type": "string",
                        "nullable": true
                      },
                      "title": {
                        "type": "string",
                        "nullable": true
                      },
                      "usualPrice": {
                        "type": "number",
                        "nullable": true
                      },
                      "usualTax": {
                        "type": "number",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fairHelper/": {
      "get": {
        "operationId": "fair_db_getFairHelper",
        "summary": "Get fairHelper.",
        "tags": [
          "fair_helper"
        ],
        "description": "Fetch fairHelper from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "city",
                  "id",
                  "name",
                  "notes",
                  "phone",
                  "ratingCut",
                  "ratingPlate",
                  "ratingSell",
                  "street",
                  "usualWagePerDay",
                  "usualWagePerHour"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingCut.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingCut.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingCut.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingCut.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingCut.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingCut.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingCut.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingCut.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingCut.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingCut.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingCut.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingCut.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPlate.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPlate.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPlate.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPlate.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPlate.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPlate.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPlate.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPlate.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPlate.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPlate.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPlate.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPlate.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSell.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSell.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSell.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSell.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSell.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSell.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSell.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingSell.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingSell.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingSell.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingSell.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingSell.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerDay.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerDay.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerDay.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerDay.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerDay.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerDay.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerDay.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualWagePerDay.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualWagePerDay.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualWagePerDay.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualWagePerDay.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualWagePerDay.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerHour.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerHour.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerHour.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerHour.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerHour.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerHour.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerHour.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualWagePerHour.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualWagePerHour.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualWagePerHour.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualWagePerHour.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualWagePerHour.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.city",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.id",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.name",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.notes",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.phone",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.ratingCut",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.ratingPlate",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.ratingSell",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.street",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.usualWagePerDay",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.usualWagePerHour",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FairHelper",
                    "description": "A FairHelper",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "city": {
                        "type": "string",
                        "nullable": true
                      },
                      "name": {
                        "type": "string",
                        "nullable": true
                      },
                      "notes": {
                        "type": "string",
                        "nullable": true
                      },
                      "phone": {
                        "type": "string",
                        "nullable": true
                      },
                      "ratingCut": {
                        "type": "integer",
                        "nullable": true
                      },
                      "ratingPlate": {
                        "type": "integer",
                        "nullable": true
                      },
                      "ratingSell": {
                        "type": "integer",
                        "nullable": true
                      },
                      "street": {
                        "type": "string",
                        "nullable": true
                      },
                      "usualWagePerDay": {
                        "type": "number",
                        "nullable": true
                      },
                      "usualWagePerHour": {
                        "type": "number",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "fair_db_createFairHelper",
        "summary": "Create fairHelper.",
        "tags": [
          "fair_helper"
        ],
        "description": "Add new fairHelper to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairHelperInput",
                "description": "A FairHelper",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "city": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "ratingCut": {
                    "type": "integer",
                    "nullable": true
                  },
                  "ratingPlate": {
                    "type": "integer",
                    "nullable": true
                  },
                  "ratingSell": {
                    "type": "integer",
                    "nullable": true
                  },
                  "street": {
                    "type": "string"
                  },
                  "usualWagePerDay": {
                    "type": "number"
                  },
                  "usualWagePerHour": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "city",
                  "name",
                  "notes",
                  "phone",
                  "street",
                  "usualWagePerDay",
                  "usualWagePerHour"
                ]
              }
            }
          },
          "required": true,
          "description": "A FairHelper"
        },
        "responses": {
          "200": {
            "description": "A FairHelper",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairHelper",
                  "description": "A FairHelper",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "city": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true
                    },
                    "phone": {
                      "type": "string",
                      "nullable": true
                    },
                    "ratingCut": {
                      "type": "integer",
                      "nullable": true
                    },
                    "ratingPlate": {
                      "type": "integer",
                      "nullable": true
                    },
                    "ratingSell": {
                      "type": "integer",
                      "nullable": true
                    },
                    "street": {
                      "type": "string",
                      "nullable": true
                    },
                    "usualWagePerDay": {
                      "type": "number",
                      "nullable": true
                    },
                    "usualWagePerHour": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "fair_db_updateFairHelper",
        "summary": "Update fairHelper.",
        "tags": [
          "fair_helper"
        ],
        "description": "Update one or more fairHelper in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairHelperInput",
                "description": "A FairHelper",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "city": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "ratingCut": {
                    "type": "integer",
                    "nullable": true
                  },
                  "ratingPlate": {
                    "type": "integer",
                    "nullable": true
                  },
                  "ratingSell": {
                    "type": "integer",
                    "nullable": true
                  },
                  "street": {
                    "type": "string"
                  },
                  "usualWagePerDay": {
                    "type": "number"
                  },
                  "usualWagePerHour": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "city",
                  "name",
                  "notes",
                  "phone",
                  "street",
                  "usualWagePerDay",
                  "usualWagePerHour"
                ]
              }
            }
          },
          "required": true,
          "description": "A FairHelper"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "city",
                  "id",
                  "name",
                  "notes",
                  "phone",
                  "ratingCut",
                  "ratingPlate",
                  "ratingSell",
                  "street",
                  "usualWagePerDay",
                  "usualWagePerHour"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.phone.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingCut.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingCut.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingCut.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingCut.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingCut.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingCut.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingCut.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingCut.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingCut.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingCut.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingCut.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingCut.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPlate.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPlate.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPlate.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPlate.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPlate.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPlate.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingPlate.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPlate.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPlate.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPlate.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPlate.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingPlate.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSell.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSell.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSell.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSell.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSell.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSell.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.ratingSell.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingSell.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingSell.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingSell.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingSell.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.ratingSell.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerDay.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerDay.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerDay.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerDay.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerDay.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerDay.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerDay.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualWagePerDay.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualWagePerDay.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualWagePerDay.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualWagePerDay.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualWagePerDay.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerHour.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerHour.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerHour.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerHour.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerHour.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerHour.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualWagePerHour.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualWagePerHour.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualWagePerHour.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualWagePerHour.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualWagePerHour.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualWagePerHour.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FairHelper",
                    "description": "A FairHelper",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "city": {
                        "type": "string",
                        "nullable": true
                      },
                      "name": {
                        "type": "string",
                        "nullable": true
                      },
                      "notes": {
                        "type": "string",
                        "nullable": true
                      },
                      "phone": {
                        "type": "string",
                        "nullable": true
                      },
                      "ratingCut": {
                        "type": "integer",
                        "nullable": true
                      },
                      "ratingPlate": {
                        "type": "integer",
                        "nullable": true
                      },
                      "ratingSell": {
                        "type": "integer",
                        "nullable": true
                      },
                      "street": {
                        "type": "string",
                        "nullable": true
                      },
                      "usualWagePerDay": {
                        "type": "number",
                        "nullable": true
                      },
                      "usualWagePerHour": {
                        "type": "number",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fairHelper/{id}": {
      "get": {
        "operationId": "fair_db_getFairHelperById",
        "summary": "Get FairHelper by id.",
        "tags": [
          "fair_helper"
        ],
        "description": "Fetch FairHelper using its id from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "city",
                  "id",
                  "name",
                  "notes",
                  "phone",
                  "ratingCut",
                  "ratingPlate",
                  "ratingSell",
                  "street",
                  "usualWagePerDay",
                  "usualWagePerHour"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairHelper",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairHelper",
                  "description": "A FairHelper",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "city": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true
                    },
                    "phone": {
                      "type": "string",
                      "nullable": true
                    },
                    "ratingCut": {
                      "type": "integer",
                      "nullable": true
                    },
                    "ratingPlate": {
                      "type": "integer",
                      "nullable": true
                    },
                    "ratingSell": {
                      "type": "integer",
                      "nullable": true
                    },
                    "street": {
                      "type": "string",
                      "nullable": true
                    },
                    "usualWagePerDay": {
                      "type": "number",
                      "nullable": true
                    },
                    "usualWagePerHour": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "fair_db_updateFairHelper",
        "summary": "Update fairHelper.",
        "tags": [
          "fair_helper"
        ],
        "description": "Update fairHelper in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairHelperInput",
                "description": "A FairHelper",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "city": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "ratingCut": {
                    "type": "integer",
                    "nullable": true
                  },
                  "ratingPlate": {
                    "type": "integer",
                    "nullable": true
                  },
                  "ratingSell": {
                    "type": "integer",
                    "nullable": true
                  },
                  "street": {
                    "type": "string"
                  },
                  "usualWagePerDay": {
                    "type": "number"
                  },
                  "usualWagePerHour": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "city",
                  "name",
                  "notes",
                  "phone",
                  "street",
                  "usualWagePerDay",
                  "usualWagePerHour"
                ]
              }
            }
          },
          "required": true,
          "description": "A FairHelper"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "city",
                  "id",
                  "name",
                  "notes",
                  "phone",
                  "ratingCut",
                  "ratingPlate",
                  "ratingSell",
                  "street",
                  "usualWagePerDay",
                  "usualWagePerHour"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairHelper",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairHelper",
                  "description": "A FairHelper",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "city": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true
                    },
                    "phone": {
                      "type": "string",
                      "nullable": true
                    },
                    "ratingCut": {
                      "type": "integer",
                      "nullable": true
                    },
                    "ratingPlate": {
                      "type": "integer",
                      "nullable": true
                    },
                    "ratingSell": {
                      "type": "integer",
                      "nullable": true
                    },
                    "street": {
                      "type": "string",
                      "nullable": true
                    },
                    "usualWagePerDay": {
                      "type": "number",
                      "nullable": true
                    },
                    "usualWagePerHour": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "fair_db_deleteFairHelper",
        "summary": "Delete fairHelper.",
        "tags": [
          "fair_helper"
        ],
        "description": "Delete one or more fairHelper from the Database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "city",
                  "id",
                  "name",
                  "notes",
                  "phone",
                  "ratingCut",
                  "ratingPlate",
                  "ratingSell",
                  "street",
                  "usualWagePerDay",
                  "usualWagePerHour"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairHelper",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairHelper",
                  "description": "A FairHelper",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "city": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true
                    },
                    "phone": {
                      "type": "string",
                      "nullable": true
                    },
                    "ratingCut": {
                      "type": "integer",
                      "nullable": true
                    },
                    "ratingPlate": {
                      "type": "integer",
                      "nullable": true
                    },
                    "ratingSell": {
                      "type": "integer",
                      "nullable": true
                    },
                    "street": {
                      "type": "string",
                      "nullable": true
                    },
                    "usualWagePerDay": {
                      "type": "number",
                      "nullable": true
                    },
                    "usualWagePerHour": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/fair/": {
      "get": {
        "operationId": "fair_db_getFair",
        "summary": "Get fair.",
        "tags": [
          "fair"
        ],
        "description": "Fetch fair from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "city",
                  "fairPresenterId",
                  "id",
                  "notes",
                  "sellingHoursUsually",
                  "street",
                  "title",
                  "usualPrice",
                  "usualTax"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairPresenterId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairPresenterId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairPresenterId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairPresenterId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairPresenterId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairPresenterId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairPresenterId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairPresenterId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairPresenterId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairPresenterId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairPresenterId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairPresenterId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.sellingHoursUsually.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.sellingHoursUsually.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.sellingHoursUsually.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.sellingHoursUsually.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.sellingHoursUsually.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.sellingHoursUsually.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.sellingHoursUsually.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.sellingHoursUsually.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.sellingHoursUsually.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.sellingHoursUsually.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.sellingHoursUsually.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.sellingHoursUsually.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualPrice.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualPrice.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualPrice.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualPrice.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualPrice.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualPrice.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualPrice.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualPrice.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualPrice.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualPrice.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualPrice.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualPrice.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualTax.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualTax.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualTax.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualTax.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualTax.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualTax.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualTax.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualTax.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualTax.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualTax.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualTax.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualTax.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.city",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.fairPresenterId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.id",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.notes",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.sellingHoursUsually",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.street",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.title",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.usualPrice",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.usualTax",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Fair",
                    "description": "A Fair",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fairPresenterId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "city": {
                        "type": "string",
                        "nullable": true
                      },
                      "notes": {
                        "type": "string",
                        "nullable": true
                      },
                      "sellingHoursUsually": {
                        "type": "integer",
                        "nullable": true
                      },
                      "street": {
                        "type": "string",
                        "nullable": true
                      },
                      "title": {
                        "type": "string",
                        "nullable": true
                      },
                      "usualPrice": {
                        "type": "number",
                        "nullable": true
                      },
                      "usualTax": {
                        "type": "number",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "fair_db_createFair",
        "summary": "Create fair.",
        "tags": [
          "fair"
        ],
        "description": "Add new fair to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairInput",
                "description": "A Fair",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "fairPresenterId": {
                    "type": "integer"
                  },
                  "city": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "sellingHoursUsually": {
                    "type": "integer"
                  },
                  "street": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "usualPrice": {
                    "type": "number"
                  },
                  "usualTax": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "city",
                  "fairPresenterId",
                  "notes",
                  "sellingHoursUsually",
                  "street",
                  "title",
                  "usualPrice",
                  "usualTax"
                ]
              }
            }
          },
          "required": true,
          "description": "A Fair"
        },
        "responses": {
          "200": {
            "description": "A Fair",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Fair",
                  "description": "A Fair",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairPresenterId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "city": {
                      "type": "string",
                      "nullable": true
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true
                    },
                    "sellingHoursUsually": {
                      "type": "integer",
                      "nullable": true
                    },
                    "street": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "usualPrice": {
                      "type": "number",
                      "nullable": true
                    },
                    "usualTax": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "fair_db_updateFair",
        "summary": "Update fair.",
        "tags": [
          "fair"
        ],
        "description": "Update one or more fair in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairInput",
                "description": "A Fair",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "fairPresenterId": {
                    "type": "integer"
                  },
                  "city": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "sellingHoursUsually": {
                    "type": "integer"
                  },
                  "street": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "usualPrice": {
                    "type": "number"
                  },
                  "usualTax": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "city",
                  "fairPresenterId",
                  "notes",
                  "sellingHoursUsually",
                  "street",
                  "title",
                  "usualPrice",
                  "usualTax"
                ]
              }
            }
          },
          "required": true,
          "description": "A Fair"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "city",
                  "fairPresenterId",
                  "id",
                  "notes",
                  "sellingHoursUsually",
                  "street",
                  "title",
                  "usualPrice",
                  "usualTax"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.city.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairPresenterId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairPresenterId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairPresenterId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairPresenterId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairPresenterId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairPresenterId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairPresenterId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairPresenterId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairPresenterId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairPresenterId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairPresenterId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairPresenterId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.sellingHoursUsually.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.sellingHoursUsually.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.sellingHoursUsually.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.sellingHoursUsually.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.sellingHoursUsually.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.sellingHoursUsually.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.sellingHoursUsually.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.sellingHoursUsually.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.sellingHoursUsually.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.sellingHoursUsually.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.sellingHoursUsually.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.sellingHoursUsually.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.street.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.title.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualPrice.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualPrice.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualPrice.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualPrice.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualPrice.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualPrice.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualPrice.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualPrice.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualPrice.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualPrice.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualPrice.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualPrice.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualTax.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualTax.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualTax.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualTax.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualTax.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualTax.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.usualTax.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualTax.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualTax.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualTax.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualTax.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.usualTax.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Fair",
                    "description": "A Fair",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fairPresenterId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "city": {
                        "type": "string",
                        "nullable": true
                      },
                      "notes": {
                        "type": "string",
                        "nullable": true
                      },
                      "sellingHoursUsually": {
                        "type": "integer",
                        "nullable": true
                      },
                      "street": {
                        "type": "string",
                        "nullable": true
                      },
                      "title": {
                        "type": "string",
                        "nullable": true
                      },
                      "usualPrice": {
                        "type": "number",
                        "nullable": true
                      },
                      "usualTax": {
                        "type": "number",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fair/{id}": {
      "get": {
        "operationId": "fair_db_getFairById",
        "summary": "Get Fair by id.",
        "tags": [
          "fair"
        ],
        "description": "Fetch Fair using its id from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "city",
                  "fairPresenterId",
                  "id",
                  "notes",
                  "sellingHoursUsually",
                  "street",
                  "title",
                  "usualPrice",
                  "usualTax"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Fair",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Fair",
                  "description": "A Fair",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairPresenterId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "city": {
                      "type": "string",
                      "nullable": true
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true
                    },
                    "sellingHoursUsually": {
                      "type": "integer",
                      "nullable": true
                    },
                    "street": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "usualPrice": {
                      "type": "number",
                      "nullable": true
                    },
                    "usualTax": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "fair_db_updateFair",
        "summary": "Update fair.",
        "tags": [
          "fair"
        ],
        "description": "Update fair in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairInput",
                "description": "A Fair",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "fairPresenterId": {
                    "type": "integer"
                  },
                  "city": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "sellingHoursUsually": {
                    "type": "integer"
                  },
                  "street": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "usualPrice": {
                    "type": "number"
                  },
                  "usualTax": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "city",
                  "fairPresenterId",
                  "notes",
                  "sellingHoursUsually",
                  "street",
                  "title",
                  "usualPrice",
                  "usualTax"
                ]
              }
            }
          },
          "required": true,
          "description": "A Fair"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "city",
                  "fairPresenterId",
                  "id",
                  "notes",
                  "sellingHoursUsually",
                  "street",
                  "title",
                  "usualPrice",
                  "usualTax"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Fair",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Fair",
                  "description": "A Fair",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairPresenterId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "city": {
                      "type": "string",
                      "nullable": true
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true
                    },
                    "sellingHoursUsually": {
                      "type": "integer",
                      "nullable": true
                    },
                    "street": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "usualPrice": {
                      "type": "number",
                      "nullable": true
                    },
                    "usualTax": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "fair_db_deleteFair",
        "summary": "Delete fair.",
        "tags": [
          "fair"
        ],
        "description": "Delete one or more fair from the Database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "city",
                  "fairPresenterId",
                  "id",
                  "notes",
                  "sellingHoursUsually",
                  "street",
                  "title",
                  "usualPrice",
                  "usualTax"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Fair",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Fair",
                  "description": "A Fair",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairPresenterId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "city": {
                      "type": "string",
                      "nullable": true
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true
                    },
                    "sellingHoursUsually": {
                      "type": "integer",
                      "nullable": true
                    },
                    "street": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "usualPrice": {
                      "type": "number",
                      "nullable": true
                    },
                    "usualTax": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/fair/{id}/fairExecution": {
      "get": {
        "operationId": "fair_db_getFairExecutionForFair",
        "summary": "Get fairExecution for fair.",
        "tags": [
          "fair"
        ],
        "description": "Fetch all the fairExecution for fair from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "black",
                  "fairId",
                  "id",
                  "notes",
                  "tmFrom",
                  "tmTo"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FairExecution",
                    "description": "A FairExecution",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fairId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "notes": {
                        "type": "string",
                        "nullable": true
                      },
                      "tmFrom": {
                        "type": "string",
                        "nullable": true
                      },
                      "tmTo": {
                        "type": "string",
                        "nullable": true
                      },
                      "black": {
                        "type": "number",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fair/{id}/fairExecutionDay": {
      "get": {
        "operationId": "fair_db_getFairExecutionDayForFair",
        "summary": "Get fairExecutionDay for fair.",
        "tags": [
          "fair"
        ],
        "description": "Fetch all the fairExecutionDay for fair from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairId",
                  "id",
                  "notes",
                  "tmDay",
                  "tmSellingHoursFrom",
                  "tmSellingHoursTo"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FairExecutionDay",
                    "description": "A FairExecutionDay",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fairId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "notes": {
                        "type": "string",
                        "nullable": true
                      },
                      "tmDay": {
                        "type": "string",
                        "nullable": true
                      },
                      "tmSellingHoursFrom": {
                        "type": "string",
                        "nullable": true
                      },
                      "tmSellingHoursTo": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fair/{id}/fair_presenter": {
      "get": {
        "operationId": "fair_db_getFairPresenterForFair",
        "summary": "Get fairPresenter for fair.",
        "tags": [
          "fair"
        ],
        "description": "Fetch the fairPresenter for fair from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "bic",
                  "description",
                  "homepage",
                  "iban",
                  "id",
                  "name",
                  "phone",
                  "ratingFair",
                  "ratingPrice"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairPresenter",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairPresenter",
                  "description": "A FairPresenter",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "bic": {
                      "type": "string",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "homepage": {
                      "type": "string",
                      "nullable": true
                    },
                    "iban": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "phone": {
                      "type": "string",
                      "nullable": true
                    },
                    "ratingFair": {
                      "type": "integer",
                      "nullable": true
                    },
                    "ratingPrice": {
                      "type": "integer",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/fairExecution/": {
      "get": {
        "operationId": "fair_db_getFairExecution",
        "summary": "Get fairExecution.",
        "tags": [
          "fair_execution"
        ],
        "description": "Fetch fairExecution from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "black",
                  "fairId",
                  "id",
                  "notes",
                  "tmFrom",
                  "tmTo"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.black.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.black.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.black.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.black.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.black.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.black.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.black.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.black.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.black.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.black.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.black.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.black.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmFrom.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmFrom.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmFrom.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmFrom.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmFrom.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmFrom.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmFrom.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmFrom.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmFrom.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmFrom.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmFrom.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmFrom.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmTo.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmTo.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmTo.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmTo.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmTo.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmTo.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmTo.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmTo.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmTo.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmTo.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmTo.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmTo.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.black",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.fairId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.id",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.notes",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.tmFrom",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.tmTo",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FairExecution",
                    "description": "A FairExecution",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fairId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "notes": {
                        "type": "string",
                        "nullable": true
                      },
                      "tmFrom": {
                        "type": "string",
                        "nullable": true
                      },
                      "tmTo": {
                        "type": "string",
                        "nullable": true
                      },
                      "black": {
                        "type": "number",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "fair_db_createFairExecution",
        "summary": "Create fairExecution.",
        "tags": [
          "fair_execution"
        ],
        "description": "Add new fairExecution to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairExecutionInput",
                "description": "A FairExecution",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "fairId": {
                    "type": "integer"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "tmFrom": {
                    "type": "string"
                  },
                  "tmTo": {
                    "type": "string"
                  },
                  "black": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "black",
                  "fairId",
                  "notes",
                  "tmFrom",
                  "tmTo"
                ]
              }
            }
          },
          "required": true,
          "description": "A FairExecution"
        },
        "responses": {
          "200": {
            "description": "A FairExecution",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecution",
                  "description": "A FairExecution",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmFrom": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmTo": {
                      "type": "string",
                      "nullable": true
                    },
                    "black": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "fair_db_updateFairExecution",
        "summary": "Update fairExecution.",
        "tags": [
          "fair_execution"
        ],
        "description": "Update one or more fairExecution in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairExecutionInput",
                "description": "A FairExecution",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "fairId": {
                    "type": "integer"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "tmFrom": {
                    "type": "string"
                  },
                  "tmTo": {
                    "type": "string"
                  },
                  "black": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "black",
                  "fairId",
                  "notes",
                  "tmFrom",
                  "tmTo"
                ]
              }
            }
          },
          "required": true,
          "description": "A FairExecution"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "black",
                  "fairId",
                  "id",
                  "notes",
                  "tmFrom",
                  "tmTo"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.black.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.black.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.black.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.black.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.black.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.black.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.black.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.black.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.black.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.black.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.black.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.black.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmFrom.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmFrom.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmFrom.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmFrom.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmFrom.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmFrom.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmFrom.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmFrom.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmFrom.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmFrom.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmFrom.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmFrom.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmTo.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmTo.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmTo.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmTo.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmTo.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmTo.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmTo.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmTo.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmTo.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmTo.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmTo.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmTo.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FairExecution",
                    "description": "A FairExecution",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fairId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "notes": {
                        "type": "string",
                        "nullable": true
                      },
                      "tmFrom": {
                        "type": "string",
                        "nullable": true
                      },
                      "tmTo": {
                        "type": "string",
                        "nullable": true
                      },
                      "black": {
                        "type": "number",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fairExecution/{id}": {
      "get": {
        "operationId": "fair_db_getFairExecutionById",
        "summary": "Get FairExecution by id.",
        "tags": [
          "fair_execution"
        ],
        "description": "Fetch FairExecution using its id from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "black",
                  "fairId",
                  "id",
                  "notes",
                  "tmFrom",
                  "tmTo"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairExecution",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecution",
                  "description": "A FairExecution",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmFrom": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmTo": {
                      "type": "string",
                      "nullable": true
                    },
                    "black": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "fair_db_updateFairExecution",
        "summary": "Update fairExecution.",
        "tags": [
          "fair_execution"
        ],
        "description": "Update fairExecution in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairExecutionInput",
                "description": "A FairExecution",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "fairId": {
                    "type": "integer"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "tmFrom": {
                    "type": "string"
                  },
                  "tmTo": {
                    "type": "string"
                  },
                  "black": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "black",
                  "fairId",
                  "notes",
                  "tmFrom",
                  "tmTo"
                ]
              }
            }
          },
          "required": true,
          "description": "A FairExecution"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "black",
                  "fairId",
                  "id",
                  "notes",
                  "tmFrom",
                  "tmTo"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairExecution",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecution",
                  "description": "A FairExecution",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmFrom": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmTo": {
                      "type": "string",
                      "nullable": true
                    },
                    "black": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "fair_db_deleteFairExecution",
        "summary": "Delete fairExecution.",
        "tags": [
          "fair_execution"
        ],
        "description": "Delete one or more fairExecution from the Database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "black",
                  "fairId",
                  "id",
                  "notes",
                  "tmFrom",
                  "tmTo"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairExecution",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecution",
                  "description": "A FairExecution",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmFrom": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmTo": {
                      "type": "string",
                      "nullable": true
                    },
                    "black": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/fairExecution/{id}/fair": {
      "get": {
        "operationId": "fair_db_getFairForFairExecution",
        "summary": "Get fair for fairExecution.",
        "tags": [
          "fair_execution"
        ],
        "description": "Fetch the fair for fairExecution from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "city",
                  "fairPresenterId",
                  "id",
                  "notes",
                  "sellingHoursUsually",
                  "street",
                  "title",
                  "usualPrice",
                  "usualTax"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Fair",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Fair",
                  "description": "A Fair",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairPresenterId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "city": {
                      "type": "string",
                      "nullable": true
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true
                    },
                    "sellingHoursUsually": {
                      "type": "integer",
                      "nullable": true
                    },
                    "street": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "usualPrice": {
                      "type": "number",
                      "nullable": true
                    },
                    "usualTax": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/fairExecutionDay/": {
      "get": {
        "operationId": "fair_db_getFairExecutionDay",
        "summary": "Get fairExecutionDay.",
        "tags": [
          "fair_execution_day"
        ],
        "description": "Fetch fairExecutionDay from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairId",
                  "id",
                  "notes",
                  "tmDay",
                  "tmSellingHoursFrom",
                  "tmSellingHoursTo"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDay.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDay.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDay.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDay.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDay.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDay.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDay.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDay.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDay.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDay.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDay.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDay.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursFrom.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursFrom.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursFrom.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursFrom.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursFrom.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursFrom.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursFrom.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursFrom.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursFrom.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursFrom.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursFrom.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursFrom.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursTo.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursTo.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursTo.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursTo.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursTo.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursTo.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursTo.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursTo.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursTo.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursTo.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursTo.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursTo.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.fairId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.id",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.notes",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.tmDay",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.tmSellingHoursFrom",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.tmSellingHoursTo",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FairExecutionDay",
                    "description": "A FairExecutionDay",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fairId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "notes": {
                        "type": "string",
                        "nullable": true
                      },
                      "tmDay": {
                        "type": "string",
                        "nullable": true
                      },
                      "tmSellingHoursFrom": {
                        "type": "string",
                        "nullable": true
                      },
                      "tmSellingHoursTo": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "fair_db_createFairExecutionDay",
        "summary": "Create fairExecutionDay.",
        "tags": [
          "fair_execution_day"
        ],
        "description": "Add new fairExecutionDay to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairExecutionDayInput",
                "description": "A FairExecutionDay",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "fairId": {
                    "type": "integer"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "tmDay": {
                    "type": "string"
                  },
                  "tmSellingHoursFrom": {
                    "type": "string"
                  },
                  "tmSellingHoursTo": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "fairId",
                  "notes",
                  "tmDay",
                  "tmSellingHoursFrom",
                  "tmSellingHoursTo"
                ]
              }
            }
          },
          "required": true,
          "description": "A FairExecutionDay"
        },
        "responses": {
          "200": {
            "description": "A FairExecutionDay",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecutionDay",
                  "description": "A FairExecutionDay",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmDay": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmSellingHoursFrom": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmSellingHoursTo": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "fair_db_updateFairExecutionDay",
        "summary": "Update fairExecutionDay.",
        "tags": [
          "fair_execution_day"
        ],
        "description": "Update one or more fairExecutionDay in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairExecutionDayInput",
                "description": "A FairExecutionDay",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "fairId": {
                    "type": "integer"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "tmDay": {
                    "type": "string"
                  },
                  "tmSellingHoursFrom": {
                    "type": "string"
                  },
                  "tmSellingHoursTo": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "fairId",
                  "notes",
                  "tmDay",
                  "tmSellingHoursFrom",
                  "tmSellingHoursTo"
                ]
              }
            }
          },
          "required": true,
          "description": "A FairExecutionDay"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairId",
                  "id",
                  "notes",
                  "tmDay",
                  "tmSellingHoursFrom",
                  "tmSellingHoursTo"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.notes.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDay.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDay.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDay.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDay.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDay.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDay.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDay.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDay.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDay.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDay.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDay.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmDay.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursFrom.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursFrom.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursFrom.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursFrom.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursFrom.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursFrom.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursFrom.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursFrom.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursFrom.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursFrom.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursFrom.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursFrom.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursTo.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursTo.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursTo.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursTo.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursTo.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursTo.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursTo.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursTo.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursTo.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursTo.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursTo.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tmSellingHoursTo.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FairExecutionDay",
                    "description": "A FairExecutionDay",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fairId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "notes": {
                        "type": "string",
                        "nullable": true
                      },
                      "tmDay": {
                        "type": "string",
                        "nullable": true
                      },
                      "tmSellingHoursFrom": {
                        "type": "string",
                        "nullable": true
                      },
                      "tmSellingHoursTo": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fairExecutionDay/{id}": {
      "get": {
        "operationId": "fair_db_getFairExecutionDayById",
        "summary": "Get FairExecutionDay by id.",
        "tags": [
          "fair_execution_day"
        ],
        "description": "Fetch FairExecutionDay using its id from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairId",
                  "id",
                  "notes",
                  "tmDay",
                  "tmSellingHoursFrom",
                  "tmSellingHoursTo"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairExecutionDay",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecutionDay",
                  "description": "A FairExecutionDay",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmDay": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmSellingHoursFrom": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmSellingHoursTo": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "fair_db_updateFairExecutionDay",
        "summary": "Update fairExecutionDay.",
        "tags": [
          "fair_execution_day"
        ],
        "description": "Update fairExecutionDay in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairExecutionDayInput",
                "description": "A FairExecutionDay",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "fairId": {
                    "type": "integer"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "tmDay": {
                    "type": "string"
                  },
                  "tmSellingHoursFrom": {
                    "type": "string"
                  },
                  "tmSellingHoursTo": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "fairId",
                  "notes",
                  "tmDay",
                  "tmSellingHoursFrom",
                  "tmSellingHoursTo"
                ]
              }
            }
          },
          "required": true,
          "description": "A FairExecutionDay"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairId",
                  "id",
                  "notes",
                  "tmDay",
                  "tmSellingHoursFrom",
                  "tmSellingHoursTo"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairExecutionDay",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecutionDay",
                  "description": "A FairExecutionDay",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmDay": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmSellingHoursFrom": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmSellingHoursTo": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "fair_db_deleteFairExecutionDay",
        "summary": "Delete fairExecutionDay.",
        "tags": [
          "fair_execution_day"
        ],
        "description": "Delete one or more fairExecutionDay from the Database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairId",
                  "id",
                  "notes",
                  "tmDay",
                  "tmSellingHoursFrom",
                  "tmSellingHoursTo"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairExecutionDay",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecutionDay",
                  "description": "A FairExecutionDay",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmDay": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmSellingHoursFrom": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmSellingHoursTo": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/fairExecutionDay/{id}/fairExecutionProductFairExecutionId": {
      "get": {
        "operationId": "fair_db_getFairExecutionProductForFairExecutionDay",
        "summary": "Get fairExecutionProduct for fairExecutionDay.",
        "tags": [
          "fair_execution_day"
        ],
        "description": "Fetch all the fairExecutionProduct for fairExecutionDay from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairExecutionId",
                  "id",
                  "productId",
                  "quantityBack",
                  "quantityThere"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FairExecutionProduct",
                    "description": "A FairExecutionProduct",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fairExecutionId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "productId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "quantityBack": {
                        "type": "number",
                        "nullable": true
                      },
                      "quantityThere": {
                        "type": "number",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fairExecutionDay/{id}/fairExecutionDaySale": {
      "get": {
        "operationId": "fair_db_getFairExecutionDaySaleForFairExecutionDay",
        "summary": "Get fairExecutionDaySale for fairExecutionDay.",
        "tags": [
          "fair_execution_day"
        ],
        "description": "Fetch all the fairExecutionDaySale for fairExecutionDay from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairExecutionDayId",
                  "id",
                  "salesCard",
                  "salesCardTax",
                  "salesCash",
                  "salesCashTax"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FairExecutionDaySale",
                    "description": "A FairExecutionDaySale",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fairExecutionDayId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "salesCard": {
                        "type": "number",
                        "nullable": true
                      },
                      "salesCardTax": {
                        "type": "number",
                        "nullable": true
                      },
                      "salesCash": {
                        "type": "number",
                        "nullable": true
                      },
                      "salesCashTax": {
                        "type": "number",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fairExecutionDay/{id}/fairExecutionCost": {
      "get": {
        "operationId": "fair_db_getFairExecutionCostForFairExecutionDay",
        "summary": "Get fairExecutionCost for fairExecutionDay.",
        "tags": [
          "fair_execution_day"
        ],
        "description": "Fetch all the fairExecutionCost for fairExecutionDay from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "description",
                  "fairExecutionId",
                  "id",
                  "price",
                  "tax"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FairExecutionCost",
                    "description": "A FairExecutionCost",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fairExecutionId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "nullable": true
                      },
                      "price": {
                        "type": "number",
                        "nullable": true
                      },
                      "tax": {
                        "type": "number",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fairExecutionDay/{id}/fairExecutionDayCostHelper": {
      "get": {
        "operationId": "fair_db_getFairExecutionDayCostHelperForFairExecutionDay",
        "summary": "Get fairExecutionDayCostHelper for fairExecutionDay.",
        "tags": [
          "fair_execution_day"
        ],
        "description": "Fetch all the fairExecutionDayCostHelper for fairExecutionDay from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairExecutionDayId",
                  "fairHelperId",
                  "wage"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FairExecutionDayCostHelper",
                    "description": "A FairExecutionDayCostHelper",
                    "type": "object",
                    "properties": {
                      "fairExecutionDayId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fairHelperId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "wage": {
                        "type": "number",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fairExecutionDay/{id}/fair": {
      "get": {
        "operationId": "fair_db_getFairForFairExecutionDay",
        "summary": "Get fair for fairExecutionDay.",
        "tags": [
          "fair_execution_day"
        ],
        "description": "Fetch the fair for fairExecutionDay from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "city",
                  "fairPresenterId",
                  "id",
                  "notes",
                  "sellingHoursUsually",
                  "street",
                  "title",
                  "usualPrice",
                  "usualTax"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Fair",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Fair",
                  "description": "A Fair",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairPresenterId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "city": {
                      "type": "string",
                      "nullable": true
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true
                    },
                    "sellingHoursUsually": {
                      "type": "integer",
                      "nullable": true
                    },
                    "street": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "usualPrice": {
                      "type": "number",
                      "nullable": true
                    },
                    "usualTax": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/fairExecutionProduct/": {
      "get": {
        "operationId": "fair_db_getFairExecutionProduct",
        "summary": "Get fairExecutionProduct.",
        "tags": [
          "fair_execution_product"
        ],
        "description": "Fetch fairExecutionProduct from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairExecutionId",
                  "id",
                  "productId",
                  "quantityBack",
                  "quantityThere"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityBack.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityBack.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityBack.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityBack.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityBack.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityBack.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityBack.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantityBack.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantityBack.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantityBack.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantityBack.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantityBack.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityThere.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityThere.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityThere.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityThere.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityThere.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityThere.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityThere.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantityThere.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantityThere.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantityThere.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantityThere.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantityThere.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.fairExecutionId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.id",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.productId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.quantityBack",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.quantityThere",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FairExecutionProduct",
                    "description": "A FairExecutionProduct",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fairExecutionId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "productId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "quantityBack": {
                        "type": "number",
                        "nullable": true
                      },
                      "quantityThere": {
                        "type": "number",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "fair_db_createFairExecutionProduct",
        "summary": "Create fairExecutionProduct.",
        "tags": [
          "fair_execution_product"
        ],
        "description": "Add new fairExecutionProduct to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairExecutionProductInput",
                "description": "A FairExecutionProduct",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "fairExecutionId": {
                    "type": "integer"
                  },
                  "productId": {
                    "type": "integer"
                  },
                  "quantityBack": {
                    "type": "number"
                  },
                  "quantityThere": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "fairExecutionId",
                  "productId",
                  "quantityBack",
                  "quantityThere"
                ]
              }
            }
          },
          "required": true,
          "description": "A FairExecutionProduct"
        },
        "responses": {
          "200": {
            "description": "A FairExecutionProduct",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecutionProduct",
                  "description": "A FairExecutionProduct",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairExecutionId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "productId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "quantityBack": {
                      "type": "number",
                      "nullable": true
                    },
                    "quantityThere": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "fair_db_updateFairExecutionProduct",
        "summary": "Update fairExecutionProduct.",
        "tags": [
          "fair_execution_product"
        ],
        "description": "Update one or more fairExecutionProduct in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairExecutionProductInput",
                "description": "A FairExecutionProduct",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "fairExecutionId": {
                    "type": "integer"
                  },
                  "productId": {
                    "type": "integer"
                  },
                  "quantityBack": {
                    "type": "number"
                  },
                  "quantityThere": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "fairExecutionId",
                  "productId",
                  "quantityBack",
                  "quantityThere"
                ]
              }
            }
          },
          "required": true,
          "description": "A FairExecutionProduct"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairExecutionId",
                  "id",
                  "productId",
                  "quantityBack",
                  "quantityThere"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.productId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.productId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityBack.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityBack.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityBack.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityBack.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityBack.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityBack.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityBack.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantityBack.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantityBack.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantityBack.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantityBack.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantityBack.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityThere.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityThere.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityThere.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityThere.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityThere.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityThere.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.quantityThere.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantityThere.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantityThere.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantityThere.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantityThere.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.quantityThere.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FairExecutionProduct",
                    "description": "A FairExecutionProduct",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fairExecutionId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "productId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "quantityBack": {
                        "type": "number",
                        "nullable": true
                      },
                      "quantityThere": {
                        "type": "number",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fairExecutionProduct/{id}": {
      "get": {
        "operationId": "fair_db_getFairExecutionProductById",
        "summary": "Get FairExecutionProduct by id.",
        "tags": [
          "fair_execution_product"
        ],
        "description": "Fetch FairExecutionProduct using its id from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairExecutionId",
                  "id",
                  "productId",
                  "quantityBack",
                  "quantityThere"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairExecutionProduct",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecutionProduct",
                  "description": "A FairExecutionProduct",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairExecutionId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "productId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "quantityBack": {
                      "type": "number",
                      "nullable": true
                    },
                    "quantityThere": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "fair_db_updateFairExecutionProduct",
        "summary": "Update fairExecutionProduct.",
        "tags": [
          "fair_execution_product"
        ],
        "description": "Update fairExecutionProduct in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairExecutionProductInput",
                "description": "A FairExecutionProduct",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "fairExecutionId": {
                    "type": "integer"
                  },
                  "productId": {
                    "type": "integer"
                  },
                  "quantityBack": {
                    "type": "number"
                  },
                  "quantityThere": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "fairExecutionId",
                  "productId",
                  "quantityBack",
                  "quantityThere"
                ]
              }
            }
          },
          "required": true,
          "description": "A FairExecutionProduct"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairExecutionId",
                  "id",
                  "productId",
                  "quantityBack",
                  "quantityThere"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairExecutionProduct",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecutionProduct",
                  "description": "A FairExecutionProduct",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairExecutionId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "productId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "quantityBack": {
                      "type": "number",
                      "nullable": true
                    },
                    "quantityThere": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "fair_db_deleteFairExecutionProduct",
        "summary": "Delete fairExecutionProduct.",
        "tags": [
          "fair_execution_product"
        ],
        "description": "Delete one or more fairExecutionProduct from the Database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairExecutionId",
                  "id",
                  "productId",
                  "quantityBack",
                  "quantityThere"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairExecutionProduct",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecutionProduct",
                  "description": "A FairExecutionProduct",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairExecutionId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "productId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "quantityBack": {
                      "type": "number",
                      "nullable": true
                    },
                    "quantityThere": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/fairExecutionProduct/{id}/product": {
      "get": {
        "operationId": "fair_db_getProductForFairExecutionProduct",
        "summary": "Get product for fairExecutionProduct.",
        "tags": [
          "fair_execution_product"
        ],
        "description": "Fetch the product for fairExecutionProduct from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "active",
                  "description",
                  "id",
                  "productSupplierId",
                  "title",
                  "unit"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Product",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Product",
                  "description": "A Product",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "active": {
                      "type": "integer",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "productSupplierId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "unit": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/fairExecutionProduct/{id}/fair_execution": {
      "get": {
        "operationId": "fair_db_getFairExecutionDayForFairExecutionProduct",
        "summary": "Get fairExecutionDay for fairExecutionProduct.",
        "tags": [
          "fair_execution_product"
        ],
        "description": "Fetch the fairExecutionDay for fairExecutionProduct from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairId",
                  "id",
                  "notes",
                  "tmDay",
                  "tmSellingHoursFrom",
                  "tmSellingHoursTo"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairExecutionDay",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecutionDay",
                  "description": "A FairExecutionDay",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmDay": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmSellingHoursFrom": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmSellingHoursTo": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/fairExecutionDaySale/": {
      "get": {
        "operationId": "fair_db_getFairExecutionDaySale",
        "summary": "Get fairExecutionDaySale.",
        "tags": [
          "fair_execution_day_sale"
        ],
        "description": "Fetch fairExecutionDaySale from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairExecutionDayId",
                  "id",
                  "salesCard",
                  "salesCardTax",
                  "salesCash",
                  "salesCashTax"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCard.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCard.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCard.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCard.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCard.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCard.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCard.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCard.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCard.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCard.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCard.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCard.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCardTax.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCardTax.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCardTax.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCardTax.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCardTax.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCardTax.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCardTax.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCardTax.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCardTax.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCardTax.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCardTax.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCardTax.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCash.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCash.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCash.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCash.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCash.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCash.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCash.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCash.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCash.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCash.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCash.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCash.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCashTax.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCashTax.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCashTax.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCashTax.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCashTax.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCashTax.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCashTax.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCashTax.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCashTax.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCashTax.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCashTax.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCashTax.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.fairExecutionDayId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.id",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.salesCard",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.salesCardTax",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.salesCash",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.salesCashTax",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FairExecutionDaySale",
                    "description": "A FairExecutionDaySale",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fairExecutionDayId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "salesCard": {
                        "type": "number",
                        "nullable": true
                      },
                      "salesCardTax": {
                        "type": "number",
                        "nullable": true
                      },
                      "salesCash": {
                        "type": "number",
                        "nullable": true
                      },
                      "salesCashTax": {
                        "type": "number",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "fair_db_createFairExecutionDaySale",
        "summary": "Create fairExecutionDaySale.",
        "tags": [
          "fair_execution_day_sale"
        ],
        "description": "Add new fairExecutionDaySale to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairExecutionDaySaleInput",
                "description": "A FairExecutionDaySale",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "fairExecutionDayId": {
                    "type": "integer",
                    "nullable": true
                  },
                  "salesCard": {
                    "type": "number"
                  },
                  "salesCardTax": {
                    "type": "number"
                  },
                  "salesCash": {
                    "type": "number"
                  },
                  "salesCashTax": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "salesCard",
                  "salesCardTax",
                  "salesCash",
                  "salesCashTax"
                ]
              }
            }
          },
          "required": true,
          "description": "A FairExecutionDaySale"
        },
        "responses": {
          "200": {
            "description": "A FairExecutionDaySale",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecutionDaySale",
                  "description": "A FairExecutionDaySale",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairExecutionDayId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "salesCard": {
                      "type": "number",
                      "nullable": true
                    },
                    "salesCardTax": {
                      "type": "number",
                      "nullable": true
                    },
                    "salesCash": {
                      "type": "number",
                      "nullable": true
                    },
                    "salesCashTax": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "fair_db_updateFairExecutionDaySale",
        "summary": "Update fairExecutionDaySale.",
        "tags": [
          "fair_execution_day_sale"
        ],
        "description": "Update one or more fairExecutionDaySale in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairExecutionDaySaleInput",
                "description": "A FairExecutionDaySale",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "fairExecutionDayId": {
                    "type": "integer",
                    "nullable": true
                  },
                  "salesCard": {
                    "type": "number"
                  },
                  "salesCardTax": {
                    "type": "number"
                  },
                  "salesCash": {
                    "type": "number"
                  },
                  "salesCashTax": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "salesCard",
                  "salesCardTax",
                  "salesCash",
                  "salesCashTax"
                ]
              }
            }
          },
          "required": true,
          "description": "A FairExecutionDaySale"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairExecutionDayId",
                  "id",
                  "salesCard",
                  "salesCardTax",
                  "salesCash",
                  "salesCashTax"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCard.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCard.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCard.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCard.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCard.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCard.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCard.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCard.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCard.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCard.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCard.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCard.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCardTax.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCardTax.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCardTax.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCardTax.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCardTax.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCardTax.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCardTax.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCardTax.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCardTax.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCardTax.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCardTax.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCardTax.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCash.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCash.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCash.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCash.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCash.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCash.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCash.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCash.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCash.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCash.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCash.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCash.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCashTax.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCashTax.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCashTax.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCashTax.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCashTax.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCashTax.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.salesCashTax.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCashTax.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCashTax.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCashTax.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCashTax.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.salesCashTax.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FairExecutionDaySale",
                    "description": "A FairExecutionDaySale",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fairExecutionDayId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "salesCard": {
                        "type": "number",
                        "nullable": true
                      },
                      "salesCardTax": {
                        "type": "number",
                        "nullable": true
                      },
                      "salesCash": {
                        "type": "number",
                        "nullable": true
                      },
                      "salesCashTax": {
                        "type": "number",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fairExecutionDaySale/{id}": {
      "get": {
        "operationId": "fair_db_getFairExecutionDaySaleById",
        "summary": "Get FairExecutionDaySale by id.",
        "tags": [
          "fair_execution_day_sale"
        ],
        "description": "Fetch FairExecutionDaySale using its id from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairExecutionDayId",
                  "id",
                  "salesCard",
                  "salesCardTax",
                  "salesCash",
                  "salesCashTax"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairExecutionDaySale",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecutionDaySale",
                  "description": "A FairExecutionDaySale",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairExecutionDayId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "salesCard": {
                      "type": "number",
                      "nullable": true
                    },
                    "salesCardTax": {
                      "type": "number",
                      "nullable": true
                    },
                    "salesCash": {
                      "type": "number",
                      "nullable": true
                    },
                    "salesCashTax": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "fair_db_updateFairExecutionDaySale",
        "summary": "Update fairExecutionDaySale.",
        "tags": [
          "fair_execution_day_sale"
        ],
        "description": "Update fairExecutionDaySale in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairExecutionDaySaleInput",
                "description": "A FairExecutionDaySale",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "fairExecutionDayId": {
                    "type": "integer",
                    "nullable": true
                  },
                  "salesCard": {
                    "type": "number"
                  },
                  "salesCardTax": {
                    "type": "number"
                  },
                  "salesCash": {
                    "type": "number"
                  },
                  "salesCashTax": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "salesCard",
                  "salesCardTax",
                  "salesCash",
                  "salesCashTax"
                ]
              }
            }
          },
          "required": true,
          "description": "A FairExecutionDaySale"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairExecutionDayId",
                  "id",
                  "salesCard",
                  "salesCardTax",
                  "salesCash",
                  "salesCashTax"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairExecutionDaySale",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecutionDaySale",
                  "description": "A FairExecutionDaySale",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairExecutionDayId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "salesCard": {
                      "type": "number",
                      "nullable": true
                    },
                    "salesCardTax": {
                      "type": "number",
                      "nullable": true
                    },
                    "salesCash": {
                      "type": "number",
                      "nullable": true
                    },
                    "salesCashTax": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "fair_db_deleteFairExecutionDaySale",
        "summary": "Delete fairExecutionDaySale.",
        "tags": [
          "fair_execution_day_sale"
        ],
        "description": "Delete one or more fairExecutionDaySale from the Database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairExecutionDayId",
                  "id",
                  "salesCard",
                  "salesCardTax",
                  "salesCash",
                  "salesCashTax"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairExecutionDaySale",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecutionDaySale",
                  "description": "A FairExecutionDaySale",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairExecutionDayId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "salesCard": {
                      "type": "number",
                      "nullable": true
                    },
                    "salesCardTax": {
                      "type": "number",
                      "nullable": true
                    },
                    "salesCash": {
                      "type": "number",
                      "nullable": true
                    },
                    "salesCashTax": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/fairExecutionDaySale/{id}/fair_execution_day": {
      "get": {
        "operationId": "fair_db_getFairExecutionDayForFairExecutionDaySale",
        "summary": "Get fairExecutionDay for fairExecutionDaySale.",
        "tags": [
          "fair_execution_day_sale"
        ],
        "description": "Fetch the fairExecutionDay for fairExecutionDaySale from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairId",
                  "id",
                  "notes",
                  "tmDay",
                  "tmSellingHoursFrom",
                  "tmSellingHoursTo"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairExecutionDay",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecutionDay",
                  "description": "A FairExecutionDay",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmDay": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmSellingHoursFrom": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmSellingHoursTo": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/fairExecutionCost/": {
      "get": {
        "operationId": "fair_db_getFairExecutionCost",
        "summary": "Get fairExecutionCost.",
        "tags": [
          "fair_execution_cost"
        ],
        "description": "Fetch fairExecutionCost from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "description",
                  "fairExecutionId",
                  "id",
                  "price",
                  "tax"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.price.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.price.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.price.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.price.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.price.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.tax.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.tax.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.tax.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.tax.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.tax.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.tax.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.tax.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tax.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tax.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tax.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tax.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tax.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.description",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.fairExecutionId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.id",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.price",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.tax",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FairExecutionCost",
                    "description": "A FairExecutionCost",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fairExecutionId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "nullable": true
                      },
                      "price": {
                        "type": "number",
                        "nullable": true
                      },
                      "tax": {
                        "type": "number",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "fair_db_createFairExecutionCost",
        "summary": "Create fairExecutionCost.",
        "tags": [
          "fair_execution_cost"
        ],
        "description": "Add new fairExecutionCost to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairExecutionCostInput",
                "description": "A FairExecutionCost",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "fairExecutionId": {
                    "type": "integer"
                  },
                  "description": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "tax": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "description",
                  "fairExecutionId",
                  "price",
                  "tax"
                ]
              }
            }
          },
          "required": true,
          "description": "A FairExecutionCost"
        },
        "responses": {
          "200": {
            "description": "A FairExecutionCost",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecutionCost",
                  "description": "A FairExecutionCost",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairExecutionId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "price": {
                      "type": "number",
                      "nullable": true
                    },
                    "tax": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "fair_db_updateFairExecutionCost",
        "summary": "Update fairExecutionCost.",
        "tags": [
          "fair_execution_cost"
        ],
        "description": "Update one or more fairExecutionCost in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairExecutionCostInput",
                "description": "A FairExecutionCost",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "fairExecutionId": {
                    "type": "integer"
                  },
                  "description": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "tax": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "description",
                  "fairExecutionId",
                  "price",
                  "tax"
                ]
              }
            }
          },
          "required": true,
          "description": "A FairExecutionCost"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "description",
                  "fairExecutionId",
                  "id",
                  "price",
                  "tax"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.description.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.price.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.price.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.price.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.price.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.price.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.price.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.tax.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.tax.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.tax.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.tax.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.tax.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.tax.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.tax.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tax.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tax.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tax.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tax.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.tax.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FairExecutionCost",
                    "description": "A FairExecutionCost",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fairExecutionId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "nullable": true
                      },
                      "price": {
                        "type": "number",
                        "nullable": true
                      },
                      "tax": {
                        "type": "number",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fairExecutionCost/{id}": {
      "get": {
        "operationId": "fair_db_getFairExecutionCostById",
        "summary": "Get FairExecutionCost by id.",
        "tags": [
          "fair_execution_cost"
        ],
        "description": "Fetch FairExecutionCost using its id from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "description",
                  "fairExecutionId",
                  "id",
                  "price",
                  "tax"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairExecutionCost",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecutionCost",
                  "description": "A FairExecutionCost",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairExecutionId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "price": {
                      "type": "number",
                      "nullable": true
                    },
                    "tax": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "fair_db_updateFairExecutionCost",
        "summary": "Update fairExecutionCost.",
        "tags": [
          "fair_execution_cost"
        ],
        "description": "Update fairExecutionCost in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairExecutionCostInput",
                "description": "A FairExecutionCost",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "fairExecutionId": {
                    "type": "integer"
                  },
                  "description": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "tax": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "description",
                  "fairExecutionId",
                  "price",
                  "tax"
                ]
              }
            }
          },
          "required": true,
          "description": "A FairExecutionCost"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "description",
                  "fairExecutionId",
                  "id",
                  "price",
                  "tax"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairExecutionCost",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecutionCost",
                  "description": "A FairExecutionCost",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairExecutionId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "price": {
                      "type": "number",
                      "nullable": true
                    },
                    "tax": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "fair_db_deleteFairExecutionCost",
        "summary": "Delete fairExecutionCost.",
        "tags": [
          "fair_execution_cost"
        ],
        "description": "Delete one or more fairExecutionCost from the Database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "description",
                  "fairExecutionId",
                  "id",
                  "price",
                  "tax"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairExecutionCost",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecutionCost",
                  "description": "A FairExecutionCost",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairExecutionId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "price": {
                      "type": "number",
                      "nullable": true
                    },
                    "tax": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/fairExecutionCost/{id}/fair_execution": {
      "get": {
        "operationId": "fair_db_getFairExecutionDayForFairExecutionCost",
        "summary": "Get fairExecutionDay for fairExecutionCost.",
        "tags": [
          "fair_execution_cost"
        ],
        "description": "Fetch the fairExecutionDay for fairExecutionCost from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairId",
                  "id",
                  "notes",
                  "tmDay",
                  "tmSellingHoursFrom",
                  "tmSellingHoursTo"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairExecutionDay",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecutionDay",
                  "description": "A FairExecutionDay",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmDay": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmSellingHoursFrom": {
                      "type": "string",
                      "nullable": true
                    },
                    "tmSellingHoursTo": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/fairExecutionDayCostHelper/": {
      "get": {
        "operationId": "fair_db_getFairExecutionDayCostHelper",
        "summary": "Get fairExecutionDayCostHelper.",
        "tags": [
          "fair_execution_day_cost_helper"
        ],
        "description": "Fetch fairExecutionDayCostHelper from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairExecutionDayId",
                  "fairHelperId",
                  "wage"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairHelperId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairHelperId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairHelperId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairHelperId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairHelperId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairHelperId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairHelperId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairHelperId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairHelperId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairHelperId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairHelperId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairHelperId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.wage.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.wage.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.wage.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.wage.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.wage.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.wage.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.wage.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.wage.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.wage.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.wage.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.wage.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.wage.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.fairExecutionDayId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.fairHelperId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.wage",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FairExecutionDayCostHelper",
                    "description": "A FairExecutionDayCostHelper",
                    "type": "object",
                    "properties": {
                      "fairExecutionDayId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fairHelperId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "wage": {
                        "type": "number",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "fair_db_createFairExecutionDayCostHelper",
        "summary": "Create fairExecutionDayCostHelper.",
        "tags": [
          "fair_execution_day_cost_helper"
        ],
        "description": "Add new fairExecutionDayCostHelper to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairExecutionDayCostHelperInput",
                "description": "A FairExecutionDayCostHelper",
                "type": "object",
                "properties": {
                  "fairExecutionDayId": {
                    "type": "integer"
                  },
                  "fairHelperId": {
                    "type": "integer"
                  },
                  "wage": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "wage"
                ]
              }
            }
          },
          "required": true,
          "description": "A FairExecutionDayCostHelper"
        },
        "responses": {
          "200": {
            "description": "A FairExecutionDayCostHelper",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecutionDayCostHelper",
                  "description": "A FairExecutionDayCostHelper",
                  "type": "object",
                  "properties": {
                    "fairExecutionDayId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairHelperId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "wage": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "fair_db_updateFairExecutionDayCostHelper",
        "summary": "Update fairExecutionDayCostHelper.",
        "tags": [
          "fair_execution_day_cost_helper"
        ],
        "description": "Update one or more fairExecutionDayCostHelper in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairExecutionDayCostHelperInput",
                "description": "A FairExecutionDayCostHelper",
                "type": "object",
                "properties": {
                  "fairExecutionDayId": {
                    "type": "integer"
                  },
                  "fairHelperId": {
                    "type": "integer"
                  },
                  "wage": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "wage"
                ]
              }
            }
          },
          "required": true,
          "description": "A FairExecutionDayCostHelper"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairExecutionDayId",
                  "fairHelperId",
                  "wage"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairExecutionDayId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairHelperId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairHelperId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairHelperId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairHelperId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairHelperId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairHelperId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.fairHelperId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairHelperId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairHelperId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairHelperId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairHelperId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.fairHelperId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.wage.eq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.wage.neq",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.wage.gt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.wage.gte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.wage.lt",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.wage.lte",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "where.wage.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.wage.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.wage.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.wage.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.wage.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.wage.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "FairExecutionDayCostHelper",
                    "description": "A FairExecutionDayCostHelper",
                    "type": "object",
                    "properties": {
                      "fairExecutionDayId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "fairHelperId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "wage": {
                        "type": "number",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fairExecutionDayCostHelper/fairExecutionDay/{fairExecutionDayId}/fairHelperId/{fairHelperId}": {
      "get": {
        "operationId": "fair_db_getFairExecutionDayCostHelperByFairExecutionDayIdAndFairHelperId",
        "summary": "Get FairExecutionDayCostHelper by FairExecutionDayIdAndFairHelperId.",
        "tags": [
          "fair_execution_day_cost_helper"
        ],
        "description": "Fetch FairExecutionDayCostHelper by FairExecutionDayIdAndFairHelperId from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairExecutionDayId",
                  "fairHelperId",
                  "wage"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "fairExecutionDayId",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "fairHelperId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairExecutionDayCostHelper",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecutionDayCostHelper",
                  "description": "A FairExecutionDayCostHelper",
                  "type": "object",
                  "properties": {
                    "fairExecutionDayId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairHelperId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "wage": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Update FairExecutionDayCostHelper by FairExecutionDayIdAndFairHelperId.",
        "tags": [
          "fair_execution_day_cost_helper"
        ],
        "description": "Update FairExecutionDayCostHelper by FairExecutionDayIdAndFairHelperId in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairExecutionDayCostHelperInput",
                "description": "A FairExecutionDayCostHelper",
                "type": "object",
                "properties": {
                  "fairExecutionDayId": {
                    "type": "integer"
                  },
                  "fairHelperId": {
                    "type": "integer"
                  },
                  "wage": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "wage"
                ]
              }
            }
          },
          "required": true,
          "description": "A FairExecutionDayCostHelper"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairExecutionDayId",
                  "fairHelperId",
                  "wage"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "fairExecutionDayId",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "fairHelperId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairExecutionDayCostHelper",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecutionDayCostHelper",
                  "description": "A FairExecutionDayCostHelper",
                  "type": "object",
                  "properties": {
                    "fairExecutionDayId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairHelperId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "wage": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update FairExecutionDayCostHelper by FairExecutionDayIdAndFairHelperId.",
        "tags": [
          "fair_execution_day_cost_helper"
        ],
        "description": "Update FairExecutionDayCostHelper by FairExecutionDayIdAndFairHelperId in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "FairExecutionDayCostHelperInput",
                "description": "A FairExecutionDayCostHelper",
                "type": "object",
                "properties": {
                  "fairExecutionDayId": {
                    "type": "integer"
                  },
                  "fairHelperId": {
                    "type": "integer"
                  },
                  "wage": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "wage"
                ]
              }
            }
          },
          "required": true,
          "description": "A FairExecutionDayCostHelper"
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairExecutionDayId",
                  "fairHelperId",
                  "wage"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "fairExecutionDayId",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "fairHelperId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairExecutionDayCostHelper",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecutionDayCostHelper",
                  "description": "A FairExecutionDayCostHelper",
                  "type": "object",
                  "properties": {
                    "fairExecutionDayId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairHelperId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "wage": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete FairExecutionDayCostHelper by FairExecutionDayIdAndFairHelperId.",
        "tags": [
          "fair_execution_day_cost_helper"
        ],
        "description": "Delete FairExecutionDayCostHelper by FairExecutionDayIdAndFairHelperId from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fairExecutionDayId",
                  "fairHelperId",
                  "wage"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "fairExecutionDayId",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "fairHelperId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A FairExecutionDayCostHelper",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FairExecutionDayCostHelper",
                  "description": "A FairExecutionDayCostHelper",
                  "type": "object",
                  "properties": {
                    "fairExecutionDayId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "fairHelperId": {
                      "type": "integer",
                      "nullable": true
                    },
                    "wage": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/extract/pdf": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileId": {
                    "type": "string"
                  },
                  "path": {
                    "type": "string"
                  },
                  "hash": {
                    "type": "string"
                  },
                  "mimetype": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "fileId",
                  "path",
                  "hash",
                  "mimetype",
                  "type"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/ai/import/test": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/ai/import/invoice/goods/{fileId}": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "fileId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/ai/test/assistant": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/ai/test/supplier": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    }
  }
}